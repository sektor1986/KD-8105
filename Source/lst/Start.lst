_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   1
- ASSEMBLE INFORMATION - ( STARTUP )

|             Command line         :  C:\PROGRA~1\SOFTUN~1\BIN\fasm907s.exe |
|                                      -f E:\sektor\Project\KD_8105\Source\ |
|                                     OPT\KD_8105.opa -Xdof -o E:\sektor\Pr |
|                                     oject\KD_8105\Source\OBJ\Start.obj -l |
|                                     f E:\sektor\Project\KD_8105\Source\LS |
|                                     T\Start.lst E:\sektor\Project\KD_8105 |
|                                     \Source\Src\Start.asm -@Hf E:\sektor\ |
|                                     Project\KD_8105\Source\OPT\Start.tpi  |
|                                                                           |
|             Total errors         :    0                                   |
|             Total warnings       :    0                                   |
|                                       There were no errors.               |
|                                                                           |
|             Object file          :  E:\sektor\Project\KD_8105\Source\OBJ\ |
|                                     Start.obj                             |
|             List file            :  E:\sektor\Project\KD_8105\Source\LST\ |
|                                     Start.lst                             |
|                                                                           |
|                                                                           |
| NO NEST     SOURCE-FILE-NAME                     CREATE DATE/TIME         |
| -- -------- ------------------------------------ ------------------------ |
|  0          E:\sektor\Project\KD_8105\Source\Src 2011-05-30 13:43:32      |
|             \Start.asm                                                    |
| -- -------- ------------------------------------ ------------------------ |
|                                                                           |
|                                                                           |
|             Current path         :  E:\sektor\Project\KD_8105\Source      |
|             Include path         :  INC907     = C:\Program Files\Softune |
|                                                  16\LIB\907\INCLUDE\      |
|             Work file path       :  TMP        = C:\Users\836D~1\AppData\ |
|                                                  Local\Temp\              |
|             Default Option file  :  OPT907     = C:\Program Files\Softune |
|                                                  16\LIB\907\ (fasm907.opt |
|                                                  )                        |
|                                                                           |
|                                                                           |
| NO NEST     OPTION-FILE-NAME                     CREATE DATE/TIME         |
| -- -------- ------------------------------------ ------------------------ |
|  0          E:\sektor\Project\KD_8105\Source\OPT 2012-10-29 13:47:07      |
|             \KD_8105.opa                                                  |
|             ------------------------------------                          |
|             -g                                                            |
|             -w 2                                                          |
|             -linf ON                                                      |
|             -lsrc ON                                                      |
|             -lsec ON                                                      |
|             -lcros OFF                                                    |
|             -linc ON                                                      |
|             -lexp OBJ                                                     |
|             -pl 60                                                        |
|             -pw 100                                                       |
|             -tab 8                                                        |
|             -cwno                                                         |
|             -cpu MB96F675RA                                               |
| -- -------- ------------------------------------ ------------------------ |
|___________________________________________________________________________|
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   2
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

<E:\sektor\Project\KD_8105\Source\Src\S
tart.asm>                               =====
                                            1      ;===============================================
                                                   =====================
                                            2      ;
                                            3      ;    Startup file for memory and basic controlle
                                                   r initialisation
                                            4      ;
                                            5      ;    MB96600 Family C Compiler
                                            6      ;
                                            7      ;===============================================
                                                   =====================
                                            8      ; 1  Disclaimer
                                            9      ;===============================================
                                                   =====================
                                           10      ;

                                           11      /***********************************************
                                                   *************************/
                                           12      /*               (C) Fujitsu Semiconductor Europ
                                                   e GmbH (FSEU)           */
                                           13      /*
                                                                           */
                                           14      /* The following software deliverable is intende
                                                   d for and must only be  */
                                           15      /* used for reference and in an evaluation labor
                                                   atory environment.      */
                                           16      /* It is provided on an as-is basis without char
                                                   ge and is subject to    */
                                           17      /* alterations.
                                                                           */
                                           18      /* It is the user’s obligation to fully test the
                                                    software in its        */
                                           19      /* environment and to ensure proper functionalit
                                                   y, qualification and    */
                                           20      /* compliance with component specifications.
                                                                           */
                                           21      /*
                                                                           */
                                           22      /* In the event the software deliverable include
                                                   s the use of open       */
                                           23      /* source components, the provisions of the gove
                                                   rning open source       */
                                           24      /* license agreement shall apply with respect to
                                                    such software          */
                                           25      /* deliverable.
                                                                           */
                                           26      /* FSEU does not warrant that the deliverables d
                                                   o not infringe any      */
                                           27      /* third party intellectual property right (IPR)
                                                   . In the event that     */
                                           28      /* the deliverables infringe a third party IPR i
                                                   t is the sole           */
                                           29      /* responsibility of the customer to obtain nece
                                                   ssary licenses to       */
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   3
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                           30      /* continue the usage of the deliverable.
                                                                           */
                                           31      /*
                                                                           */
                                           32      /* To the maximum extent permitted by applicable
                                                    law FSEU disclaims all */
                                           33      /* warranties, whether express or implied, in pa
                                                   rticular, but not       */
                                           34      /* limited to, warranties of merchantability and
                                                    fitness for a          */
                                           35      /* particular purpose for which the deliverable
                                                   is not designated.      */
                                           36      /*
                                                                           */
                                           37      /* To the maximum extent permitted by applicable
                                                    law, FSEU’s liability  */
                                           38      /* is restricted to intentional misconduct and g
                                                   ross negligence.        */
                                           39      /* FSEU is not liable for consequential damages.
                                                                           */
                                           40      /*
                                                                           */
                                           41      /* (V1.5)
                                                                           */
                                           42      /***********************************************
                                                   *************************/
                                           43
                                           44

                                           45      ;
                                           46      ;===============================================
                                                   =====================
                                           47
MODULE NAME = STARTUP                      48                .PROGRAM  STARTUP
                                           49                .TITLE    "STARTUP FILE FOR MEMORY INI
                                                   TIALISATION"
                                           50
                                           51      ;===============================================
                                                   =====================
                                           52      ; 2  Contents
                                           53      ;===============================================
                                                   =====================
                                           54      ;
                                           55      ; 1  Disclaimer
                                           56      ;
                                           57      ; 2  Contents
                                           58      ;
                                           59      ; 3  History
                                           60      ;
                                           61      ; 4  Settings
                                           62      ; 4.1   Controller Series, Device
                                           63      ; 4.2   C-language Memory model
                                           64      ; 4.3   Function-Call Interface
                                           65      ; 4.4   Constant Data Handling
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   4
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                           66      ; 4.5   Stack Type and Stack Size
                                           67      ; 4.6   General Register Bank
                                           68      ; 4.7   Low-Level Library Interface
                                           69      ; 4.8   Clock Selection
                                           70      ; 4.9   Clock Stabilization Time
                                           71      ; 4.10  ROM Mirror configuration
                                           72      ; 4.11  Enable RAMCODE Copying
                                           73      ; 4.12  Enable information stamp in ROM
                                           74      ; 4.13  Flash Security
                                           75      ; 4.14  Flash Write Protection
                                           76      ; 4.15  Boot Vector
                                           77      ; 4.16  Vector table base register configuration
                                           78      ; 4.17  UART scanning
                                           79      ; 4.18  On-chip debug system configuration
                                           80      ; 4.19  NMI configuration
                                           81      ; 4.20  Low voltage detection configuration
                                           82      ; 4.21  Watchdog timer interval configuration
                                           83      ;
                                           84      ; 5  Section and Data Declaration
                                           85      ; 5.1   Several fixed addresses (fixed for MB966
                                                   xx controllers)
                                           86      ; 5.2   Set ROM Configuration for Boot Vector
                                           87      ; 5.3   Set ROM configuration for UART Scanning
                                           88      ; 5.4   Set Flash Security
                                           89      ; 5.5   Set Flash write protection
                                           90      ; 5.6   Set ROM configuration for OCDS
                                           91      ; 5.7   Set ROM configuration for NMI
                                           92      ; 5.8   Set ROM configuration for Table Base Reg
                                                   ister (TBR)
                                           93      ; 5.9   Set ROM configuration for sub oscillator
                                           94      ; 5.10  Set ROM configuration for low voltage de
                                                   tection
                                           95      ; 5.11  Set ROM configuration for watchdog inter
                                                   val
                                           96      ; 5.12  Store version information
                                           97      ; 5.13  Declaration of __near addressed data sec
                                                   tions
                                           98      ; 5.14  Declaration of RAMCODE section and label
                                                   s
                                           99      ; 5.15  Declaration of sections containing other
                                                    sections description
                                          100      ; 5.16  Stack area and stack top definition/decl
                                                   aration
                                          101      ; 5.17  Direct page register dummy label definit
                                                   ion
                                          102      ;
                                          103      ; 6  Start-Up Code
                                          104      ; 6.1   Import external symbols
                                          105      ; 6.2   Program start (the reset vector should p
                                                   oint here)
                                          106      ; 6.3   Initialisation of processor status
                                          107      ; 6.4   Set clock ratio (ignore subclock)
                                          108      ; 6.5   Set ROM mirror configuaration
                                          109      ; 6.6   Prepare stacks and set the default stack
                                                    type
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   5
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          110      ; 6.7   Copy initial values to data areas.
                                          111      ; 6.8   Clear uninitialized data areas to zero
                                          112      ; 6.9   Set Data Bank Register (DTB) and Direct
                                                   Page Register (DPR)
                                          113      ; 6.10  Wait for clocks to stabilize
                                          114      ; 6.11  Initialise Low-Level Library Interface
                                          115      ; 6.12  Call C-language main function
                                          116      ; 6.13  Shut down library
                                          117      ; 6.14  Program end loop
                                          118      ;
                                          119      ;===============================================
                                                   =====================
                                          120      ; 3  History
                                          121      ;===============================================
                                                   =====================
                                          122      ; Id: START.ASM 3734 2011-02-03 08:57:19Z ceyric
                                          123
                                          124      #define VERSION  "1.00"
                                          125      /*
                                          126      Revision 1.00 Id: START.ASM 3734 2011-02-03 08:5
                                                   7:19Z ceyric
                                          127      - initial version based on start.asm for MB96300
                                                    Family, version 1.59
                                          128      */
                                          129      ;===============================================
                                                   =====================
                                          130
                                          131      ;===============================================
                                                   =====================
                                          132      ; 4  Settings
                                          133      ;===============================================
                                                   =====================
                                          134      ;
                                          135      ; CHECK ALL OPTIONS WHETHER THEY FIT TO THE APPL
                                                   ICATION
                                          136      ;
                                          137      ; Configure this startup file in the "Settings"
                                                   section. Search for
                                          138      ; comments with leading "; <<<". This points to
                                                   the items to be set.
                                          139      ;===============================================
                                                   =====================
                                          140      #set      OFF       0
                                          141      #set      ON        1
                                          142
                                          143      ;===============================================
                                                   =====================
                                          144      ; 4.1   Controller Series, Device
                                          145      ;===============================================
                                                   =====================
                                          146
                                          147
                                          148      #set      MB96670   670
                                          149      #set      MB96680   680
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   6
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          150
                                          151      #set      SERIES    MB96670        ; <<< select
                                                   Series
                                          152
                                          153
                                          154      ; Please specify the device according to the fol
                                                   lowing selection;
                                          155      ; Note: Do not change order because of potential
                                                    device number
                                          156      ; dependency in certain sections of this start-u
                                                   p file
                                          157
                                          158      ; MB96680 series
                                          159      #set      MB96673RA   67031
                                          160      #set      MB96673AA   67032
                                          161      #set      MB96675RA   67051
                                          162      #set      MB96675AA   67052
                                          163
                                          164      ; MB96680 series
                                          165      #set      MB96683RA   68031
                                          166      #set      MB96683AA   68032
                                          167      #set      MB96685RA   68051
                                          168      #set      MB96685AA   68052
                                          169
                                          170      #set      DEVICE    MB96675RA      ; <<< select
                                                   device
                                          171
                                          172      ;===============================================
                                                   =====================
                                          173      ; 4.2   C-language Memory model
                                          174      ;===============================================
                                                   =====================
                                          175
                                          176                                         ;      data
                                                       code
                                          177      #set      SMALL     0              ;     16 Bit
                                                      16 Bit
                                          178      #set      MEDIUM    1              ;     16 Bit
                                                      24 Bit
                                          179      #set      COMPACT   2              ;     24 Bit
                                                      16 Bit
                                          180      #set      LARGE     3              ;     24 Bit
                                                      24 Bit
                                          181      #set      AUTOMODEL 4              ; works alway
                                                   s, might occupy two
                                          182                                         ; additional
                                                   bytes
                                          183
                                          184
                                          185      #set      MEMMODEL  AUTOMODEL      ; <<< C-memor
                                                   y model
                                          186
                                          187      ; The selected memory model should be set in ord
                                                   er to fit to the
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   7
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          188      ; model selected for the compiler.
                                          189      ; Note, in this startup version AUTOMODEL will w
                                                   ork for all
                                          190      ; C-models. However, if the compiler is configur
                                                   ed for SMALL or
                                          191      ; COMPACT, two additional bytes on stack are occ
                                                   upied. If this is not
                                          192      ; acceptable, the above setting should be set to
                                                    the correct model.
                                          193
                                          194      ;===============================================
                                                   =====================
                                          195      ; 4.3   Function-Call Interface
                                          196      ;===============================================
                                                   =====================
                                          197
                                          198                #if __REG_PASS__
                                          199   X              .REG_PASS
                                          200                #endif
                                          201
                                          202      ; Above statement informs Assembler on compatibi
                                                   lity of start-up code
                                          203      ; to  Function Call Interface  as selected for t
                                                   he application. There
                                          204      ; is nothing to configure.
                                          205      ; The Function-Call Interface specifies the meth
                                                   od of passing parame-
                                          206      ; ter from function caller to callee.  The stand
                                                   ard method of FCC907S
                                          207      ; compiler  uses  "stack argument passing".  Alt
                                                   ernatively,  language
                                          208      ; tools can be configured for "register argument
                                                    passing".
                                          209      ; For details see the compiler manual.
                                          210      ; This start-up file is compatible to both inter
                                                   faces.
                                          211
                                          212      ;===============================================
                                                   =====================
                                          213      ; 4.4   Constant Data Handling
                                          214      ;===============================================
                                                   =====================
                                          215
                                          216      #set      ROMCONST    0            ; works only
                                                   with compiler ROMCONST
                                          217      #set      RAMCONST    1            ; works with
                                                   BOTH compiler settings
                                          218      #set      AUTOCONST   RAMCONST     ; works with
                                                   BOTH compiler settings
                                          219
                                          220      #set      CONSTDATA   AUTOCONST    ; <<< set RAM
                                                   /ROM/AUTOCONST
                                          221
                                          222      ; - AUTOCONST (default) is the same as RAMCONST
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   8
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          223      ; - RAMCONST/AUTOCONST should always work, even
                                                   if compiler is set to
                                          224      ;   ROMCONST. If compiler is set to ROMCONST and
                                                    this startup file is
                                          225      ;   set to RAMCONST or AUTOCONST, this startup f
                                                   ile will generate an
                                          226      ;   empty section CINIT in RAM. However, the cod
                                                   e, which copies from
                                          227      ;   CONST to CINIT will not have any effect, bec
                                                   ause size of section is 0.
                                          228      ; - It is highly recommended to set the compiler
                                                    to ROMCONST for
                                          229      ;   single-chip mode or internal ROM+ext bus. Th
                                                   e start-up file
                                          230      ;   should be set to AUTOCONST.
                                          231      ; - ROMCONST setting on systems with full extern
                                                   al bus requires exter-
                                          232      ;   nal address mapping.
                                          233      ;   Single-chip can be emulated by the emulator
                                                   debugger.
                                          234      ;   ROM mirror can also be used with simulator.
                                          235      ;
                                          236      ; see also ROM MIRROR options
                                          237
                                          238      ;===============================================
                                                   =====================
                                          239      ; 4.5   Stack Type and Stack Size
                                          240      ;===============================================
                                                   =====================
                                          241
                                          242      #set      USRSTACK       0      ; user stack: fo
                                                   r main program
                                          243      #set      SYSSTACK       1      ; system stack:
                                                   for main program and interrupts
                                          244
                                          245      #set      STACKUSE  SYSSTACK    ; <<< set active
                                                    stack
                                          246
                                          247      #set      STACK_RESERVE  ON     ; <<< reserve st
                                                   ack area in this module
                                          248      #set      STACK_SYS_SIZE 768    ; <<< byte size
                                                   of System stack
                                          249      #set      STACK_USR_SIZE 2      ; <<< byte size
                                                   of User stack
                                          250
                                          251      #set      STACK_FILL     ON     ; <<< fills the
                                                   stack area with pattern
                                          252      #set      STACK_PATTERN  0x55AA ; <<< the patter
                                                   n to write to stack
                                          253
                                          254      ; - If the active stack is set to SYSSTACK, it i
                                                   s used for main program
                                          255      ;   and interrupts. In this case, the user stack
                                                    can be set to a dummy
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:   9
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          256      ;   size.
                                          257      ;   If the active stack is set to user stack, it
                                                    is used for the main
                                          258      ;   program but the system stack is automaticall
                                                   y activated, if an inter-
                                          259      ;   rupt is serviced. Both stack areas must have
                                                    a reasonable size.
                                          260      ; - If STACK_RESERVE is ON, the sections USTACK
                                                   and SSTACK are reserved
                                          261      ;   in this module. Otherwise, they have to be r
                                                   eserved in other modules.
                                          262      ;   If STACK_RESERVE is OFF, the size definition
                                                   s STACK_SYS_SIZE and
                                          263      ;   STACK_USR_SIZE have no meaning.
                                          264      ; - Even if they are reserved in other modules,
                                                   they are still initialised
                                          265      ;   in this start-up file.
                                          266      ; - Filling the stack with a pattern allows to d
                                                   ynamically check the stack
                                          267      ;   area, which had already been used.
                                          268      ;
                                          269      ; - If only system stack is used and SSB is link
                                                   ed to a different bank
                                          270      ;   than USB, make sure that all C-modules (whic
                                                   h generate far pointers
                                          271      ;   to stack data) have "#pragma SSB". Applies o
                                                   nly to exclusive confi-
                                          272      ;   gurations.
                                          273      ; - Note, several library functions require quit
                                                   e a big stack (due to
                                          274      ;   ANSI). Check the stack information files (*.
                                                   stk) in the LIB\907
                                          275      ;   directory.
                                          276
                                          277      ;===============================================
                                                   =====================
                                          278      ; 4.6   General Register Bank
                                          279      ;===============================================
                                                   =====================
                                          280
                                          281      #set      REGBANK   0           ; <<< set defaul
                                                   t register bank
                                          282
                                          283      ; set the General Register Bank that is to be us
                                                   ed after startup.
                                          284      ; Usually, this is bank 0, which applies to addr
                                                   ess H'180..H'18F. Set
                                          285      ; in the range from 0 to 31.
                                          286      ; Note: All used register banks have to be reser
                                                   ved (linker options).
                                          287
                                          288      #if REGBANK > 31 || REGBANK < 0
                                          289   X  #  error REGBANK setting out of range
                                          290      #endif
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  10
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          291
                                          292      ;===============================================
                                                   =====================
                                          293      ; 4.7   Low-Level Library Interface
                                          294      ;===============================================
                                                   =====================
                                          295
                                          296      #set      CLIBINIT       OFF    ; <<< select ext
                                                   ended library usage
                                          297
                                          298      ; This option has only to be set, if stream-IO/s
                                                   tandard-IO function of
                                          299      ; the C-library have to be used (printf(), fopen
                                                   ()...). This also
                                          300      ; requires low-level functions to be defined by
                                                   the application
                                          301      ; software.
                                          302      ; For other library functions (like e.g. sprintf
                                                   ()) all this is not
                                          303      ; necessary. However, several functions consume
                                                   a large amount of stack.
                                          304
                                          305      ;===============================================
                                                   =====================
                                          306      ; 4.8   Clock Selection
                                          307      ;===============================================
                                                   =====================
                                          308
                                          309      ; The clock selection requires that a 4 MHz or 8
                                                    MHz external clock
                                          310      ; is provided as the Main Clock. If a different
                                                   frequency is used,
                                          311      ; the Flash Memory Timing settings must be check
                                                   ed!
                                          312
                                          313      #set      CLOCKWAIT      ON     ; <<<  wait for
                                                   stabilized clock, if
                                          314                                      ;      Main Cloc
                                                   k or PLL is used
                                          315
                                          316      ; The clock is set quite early. However, if CLOC
                                                   KWAIT is ON, polling
                                          317      ; for machine clock to be switched to Main Clock
                                                    or PLL is done at
                                          318      ; the end of this file. Therefore, the stabiliza
                                                   tion time is not
                                          319      ; wasted. Main() will finally start at correct s
                                                   peed. Resources can
                                          320      ; be used immediately.
                                          321      ; Note: If CLOCKWAIT is switched off, Flash timi
                                                   ng settings may
                                          322      ; be set to a value that is slower than optimal.
                                          323      ;
                                          324      ; This startup file version does not support sub
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  11
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   clock.
                                          325
                                          326      #set      FREQ_4MHZ       D'4000000L
                                          327      #set      FREQ_8MHZ       D'8000000L
                                          328      #set      FREQ_16MHZ      D'16000000L
                                          329
                                          330      #set      CRYSTAL         FREQ_4MHZ  ; <<< selec
                                                   t external crystal frequency
                                          331
                                          332
                                          333      #set      CPU_4MHZ_MAIN_CLKP2_4MHZ            0x
                                                   00000000L
                                          334      #set      CPU_4MHZ_PLL_CLKP2_4MHZ             0x
                                                   04040404L
                                          335      #set      CPU_8MHZ_CLKP2_8MHZ                 0x
                                                   08080808L
                                          336      #set      CPU_12MHZ_CLKP2_12MHZ               0x
                                                   0C0C0C0CL
                                          337      #set      CPU_16MHZ_CLKP2_16MHZ               0x
                                                   10101010L
                                          338      #set      CPU_24MHZ_CLKP2_12MHZ               0x
                                                   18180C18L
                                          339      #set      CPU_24MHZ_CLKP2_16MHZ               0x
                                                   18181018L
                                          340      #set      CPU_24MHZ_CLKP2_24MHZ               0x
                                                   18181818L
                                          341      #set      CPU_32MHZ_CLKP2_16MHZ               0x
                                                   20201020L
                                          342      #set      CPU_32MHZ_CLKP1_16MHZ_CLKP2_16MHZ   0x
                                                   20101020L
                                          343
                                          344      #set      CLOCK_SPEED     CPU_32MHZ_CLKP2_16MHZ
                                                    ; <<< set clock speeds
                                          345
                                          346      ; If not specified seperately, the peripheral cl
                                                   ock CLKP1 is set to
                                          347      ; the same frequency as the CPU.
                                          348      ; The peripheral clock CLKP2 has its own setting
                                                   . This is because it
                                          349      ; feeds only the CAN controllers and Sound Gener
                                                   ators. These do not
                                          350      ; need high frequency clocks.
                                          351
                                          352
                                          353      ; The BootROM is able to configure sub oscillato
                                                   r availability and mode
                                          354      #set      SUBOSC_DISABLED     1      ; Sub oscil
                                                   lator is disabled, pins can be used as GPIO pins
                                          355      #set      SUBOSC_CRYSTAL      2      ; Sub oscil
                                                   lator is enabled in "oscillation mode", connect
                                                   crystal/resonator to X0A/X1A pins
                                          356      #set      SUBOSC_EXT_CLOCK    3      ; Sub oscil
                                                   lator is enabled in "external clock input mode",
                                                    connect ext. clock to X0A pin, X1A can bes used
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  12
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                    as GPIO
                                          357
                                          358      #set      SUBOSC_MODE         SUBOSC_DISABLED
                                                   ; <<< select sub oscillator mode
                                          359
                                          360
                                          361      ;===============================================
                                                   =====================
                                          362      ; 4.9   Clock Stabilization Time
                                          363      ;===============================================
                                                   =====================
                                          364
                                          365      ; Main clock stabilization time is given in cloc
                                                   k cycles, where
                                          366      ; MC_2_X_CYCLES means 2 to power of X cycles.
                                          367
                                          368      #set      MC_2_10_CYCLES   0
                                          369      #set      MC_2_12_CYCLES   1
                                          370      #set      MC_2_13_CYCLES   2
                                          371      #set      MC_2_14_CYCLES   3
                                          372      #set      MC_2_15_CYCLES   4
                                          373      #set      MC_2_16_CYCLES   5
                                          374      #set      MC_2_17_CYCLES   6
                                          375      #set      MC_2_18_CYCLES   7
                                          376
                                          377      #set      MC_STAB_TIME     MC_2_15_CYCLES ; <<<
                                                   select Main Clock Stabilization Time
                                          378
                                          379
                                          380      ;===============================================
                                                   =====================
                                          381      ; 4.10  ROM Mirror configuration
                                          382      ;===============================================
                                                   =====================
                                          383
                                          384      #set      MIRROR_8KB    0
                                          385      #set      MIRROR_16KB   1
                                          386      #set      MIRROR_24KB   2
                                          387      #set      MIRROR_32KB   3
                                          388
                                          389      #set      ROMMIRROR     ON          ; <<< ROM mi
                                                   rror function ON/OFF
                                          390      #set      MIRROR_BANK   0xF         ; <<< ROM Mi
                                                   rror bank, allowed entries: 0x0..0xF for the ban
                                                   ks 0xF0..0xFF
                                          391      #set      MIRROR_SIZE   MIRROR_32KB ; <<< ROM Mi
                                                   rror size
                                          392
                                          393      ; One can select which ROM area to mirror into t
                                                   he upper half of bank 00.
                                          394      ; If ROMMIRROR = OFF is selected, the address ra
                                                   nge 0x008000..0x00FFFF
                                          395      ; shows the contents of the respective area of b
                                                   ank 1: 0x018000..0x01FFFF.
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  13
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          396      ; If ROMMIRROR = ON is selected, the memory bank
                                                    to mirror can be selected.
                                          397      ; Available banks are 0xF0 to 0xFF. Furthermore,
                                                    the ROM Mirror area size can
                                          398      ; be selected. 4 sizes are available: 8 kB, 16 k
                                                   B, 24 kB, or 32 kB. The ROM Mirror
                                          399      ; from the highest address of the selected bank
                                                   downwards, e.g. if bank 0xFF and
                                          400      ; mirror size 24 kB is selected, the memory rang
                                                   e 0xFFA000..0xFFFFFF is mirrored
                                          401      ; to address range 0x00A000..0x00FFFF. The memor
                                                   y area not selected for
                                          402      ; ROM Mirror is still mirrored from bank 0x01.
                                          403      ; This is necessary to get the compiler ROMCONST
                                                    option working. This is intended
                                          404      ; to increase performance, if a lot of dynamic d
                                                   ata have to be accessed.
                                          405      ; In SMALL and MEDIUM model these data can be ac
                                                   cessed within bank 0,
                                          406      ; which allows to use near addressing. Please ma
                                                   ke sure to have the linker
                                          407      ; setting adjusted accordingly!
                                          408
                                          409
                                          410      ;===============================================
                                                   =====================
                                          411      ; 4.11  Enable RAMCODE Copying
                                          412      ;===============================================
                                                   =====================
                                          413
                                          414      #set      COPY_RAMCODE      OFF     ; <<< enable
                                                    RAMCODE section to
                                          415                                          ; be copied
                                                   from ROM to RAM
                                          416
                                          417      ; To get this option properly working the code t
                                                   o be executed has to
                                          418      ; be linked to section RAMCODE (e.g. by #pragma
                                                   section). The section
                                          419      ; RAMCODE has be located in RAM and the section
                                                   @RAMCODE has to be
                                          420      ; located at a fixed address in ROM by linker se
                                                   ttings.
                                          421
                                          422
                                          423      ;===============================================
                                                   =====================
                                          424      ; 4.12  Enable information stamp in ROM
                                          425      ;===============================================
                                                   =====================
                                          426
                                          427      #set      VERSION_STAMP     OFF     ; <<< enable
                                                    version number in
                                          428                                          ; separated
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  14
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   section
                                          429
                                          430
                                          431      ;===============================================
                                                   =====================
                                          432      ; 4.13  Flash Security
                                          433      ;===============================================
                                                   =====================
                                          434      ; All settings regarding Flash B are ignored on
                                                   devices that do not
                                          435      ; have a Flash B.
                                          436
                                          437      #set      FLASH_A_SECURITY_ENABLE     OFF ; <<<
                                                   enable Flash Security for Flash A
                                          438      #set      FLASH_B_SECURITY_ENABLE     OFF ; <<<
                                                   enable Flash Security for Flash B
                                          439
                                          440      ; set the Flash Security unlock key (16 bytes)
                                          441      ; all 0: unlock not possible
                                          442      #set      FLASH_A_UNLOCK_0           0x00
                                          443      #set      FLASH_A_UNLOCK_1           0x00
                                          444      #set      FLASH_A_UNLOCK_2           0x00
                                          445      #set      FLASH_A_UNLOCK_3           0x00
                                          446      #set      FLASH_A_UNLOCK_4           0x00
                                          447      #set      FLASH_A_UNLOCK_5           0x00
                                          448      #set      FLASH_A_UNLOCK_6           0x00
                                          449      #set      FLASH_A_UNLOCK_7           0x00
                                          450      #set      FLASH_A_UNLOCK_8           0x00
                                          451      #set      FLASH_A_UNLOCK_9           0x00
                                          452      #set      FLASH_A_UNLOCK_10          0x00
                                          453      #set      FLASH_A_UNLOCK_11          0x00
                                          454      #set      FLASH_A_UNLOCK_12          0x00
                                          455      #set      FLASH_A_UNLOCK_13          0x00
                                          456      #set      FLASH_A_UNLOCK_14          0x00
                                          457      #set      FLASH_A_UNLOCK_15          0x00
                                          458
                                          459      #set      FLASH_B_UNLOCK_0           0x00
                                          460      #set      FLASH_B_UNLOCK_1           0x00
                                          461      #set      FLASH_B_UNLOCK_2           0x00
                                          462      #set      FLASH_B_UNLOCK_3           0x00
                                          463      #set      FLASH_B_UNLOCK_4           0x00
                                          464      #set      FLASH_B_UNLOCK_5           0x00
                                          465      #set      FLASH_B_UNLOCK_6           0x00
                                          466      #set      FLASH_B_UNLOCK_7           0x00
                                          467      #set      FLASH_B_UNLOCK_8           0x00
                                          468      #set      FLASH_B_UNLOCK_9           0x00
                                          469      #set      FLASH_B_UNLOCK_10          0x00
                                          470      #set      FLASH_B_UNLOCK_11          0x00
                                          471      #set      FLASH_B_UNLOCK_12          0x00
                                          472      #set      FLASH_B_UNLOCK_13          0x00
                                          473      #set      FLASH_B_UNLOCK_14          0x00
                                          474      #set      FLASH_B_UNLOCK_15          0x00
                                          475
                                          476      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  15
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                          477      ; 4.14  Flash Write Protection
                                          478      ;===============================================
                                                   =====================
                                          479      ; All settings regarding sectors that do not exi
                                                   st on the particular
                                          480      ; device will have no effect.
                                          481
                                          482      #set      FLASH_A_WRITE_PROTECT           ON
                                                     ; <<< select Flash A write protection
                                          483      #set      PROTECT_SECTOR_SAS              OFF
                                                       ; <<< select individual sector to protect
                                          484      #set      PROTECT_SECTOR_SA0              OFF
                                                       ; <<< select individual sector to protect
                                          485      #set      PROTECT_SECTOR_SA1              OFF
                                                       ; <<< select individual sector to protect
                                          486      #set      PROTECT_SECTOR_SA2              OFF
                                                       ; <<< select individual sector to protect
                                          487      #set      PROTECT_SECTOR_SA3              OFF
                                                       ; <<< select individual sector to protect
                                          488      #set      PROTECT_SECTOR_SA39             OFF
                                                       ; <<< select individual sector to protect
                                          489      #set      PROTECT_SECTOR_SA38             OFF
                                                       ; <<< select individual sector to protect
                                          490      #set      PROTECT_SECTOR_SA37             OFF
                                                       ; <<< select individual sector to protect
                                          491      #set      PROTECT_SECTOR_SA36             OFF
                                                       ; <<< select individual sector to protect
                                          492      #set      PROTECT_SECTOR_SA35             OFF
                                                       ; <<< select individual sector to protect
                                          493      #set      PROTECT_SECTOR_SA34             OFF
                                                       ; <<< select individual sector to protect
                                          494      #set      PROTECT_SECTOR_SA33             OFF
                                                       ; <<< select individual sector to protect
                                          495      #set      PROTECT_SECTOR_SA32             OFF
                                                       ; <<< select individual sector to protect
                                          496
                                          497      ; All settings regarding Flash B are ignored on
                                                   devices that do not
                                          498      ; have a Flash B.
                                          499      #set      FLASH_B_WRITE_PROTECT           OFF
                                                       ; <<< select Flash write protection
                                          500      #set      PROTECT_SECTOR_SBS              OFF
                                                       ; <<< select individual sector to protect
                                          501      #set      PROTECT_SECTOR_SB0              OFF
                                                       ; <<< select individual sector to protect
                                          502      #set      PROTECT_SECTOR_SB1              OFF
                                                       ; <<< select individual sector to protect
                                          503      #set      PROTECT_SECTOR_SB2              OFF
                                                       ; <<< select individual sector to protect
                                          504      #set      PROTECT_SECTOR_SB3              OFF
                                                       ; <<< select individual sector to protect
                                          505      #set      PROTECT_SECTOR_SB31             OFF
                                                       ; <<< select individual sector to protect
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  16
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          506      #set      PROTECT_SECTOR_SB30             OFF
                                                       ; <<< select individual sector to protect
                                          507      #set      PROTECT_SECTOR_SB29             OFF
                                                       ; <<< select individual sector to protect
                                          508      #set      PROTECT_SECTOR_SB28             OFF
                                                       ; <<< select individual sector to protect
                                          509      #set      PROTECT_SECTOR_SB27             OFF
                                                       ; <<< select individual sector to protect
                                          510      #set      PROTECT_SECTOR_SB26             OFF
                                                       ; <<< select individual sector to protect
                                          511      #set      PROTECT_SECTOR_SB25             OFF
                                                       ; <<< select individual sector to protect
                                          512      #set      PROTECT_SECTOR_SB24             OFF
                                                       ; <<< select individual sector to protect
                                          513
                                          514
                                          515      ;===============================================
                                                   =====================
                                          516      ; 4.15  Boot Vector
                                          517      ;===============================================
                                                   =====================
                                          518
                                          519      #set      BOOT_VECTOR_TABLE        1      ; boot
                                                    vector setting in vector table
                                          520      #set      BOOT_VECTOR_ALTERNATIVE  2      ; alte
                                                   rnative boot vector
                                          521
                                          522      #set      BOOT_VECTOR              BOOT_VECTOR_T
                                                   ABLE   ; <<< select type of boot vector
                                          523
                                          524
                                          525      ; If boot vector generation is enabled (BOOT_VEC
                                                   TOR_TABLE, BOOT_VECTOR_ALTERNATIVE),
                                          526      ; appropriate code is generated. If it is disabl
                                                   ed (OFF), start-up file does
                                          527      ; not care about.
                                          528      ;
                                          529      ;         BOOT_VECTOR_TABLE: - Create table entr
                                                   y at appropriate address of vector table.
                                          530      ;                            - Any start address
                                                    can be set and start-up file will
                                          531      ;                              set address of th
                                                   is start code.
                                          532      ;   BOOT_VECTOR_ALTERNATIVE: - Instead of vector
                                                    table entry, a special marker is set in
                                          533      ;                              ROM Configuration
                                                    Block, which enables the alternative
                                          534      ;                              boot vector addre
                                                   ss programmed to 0xDF0040.
                                          535      ;                              This is prefered
                                                   setting for user boot loaders.
                                          536      ;                       OFF: - Do not set table
                                                   entry and marker. This might be used
                                          537      ;                              for application t
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  17
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   o be loaded by boot loader.
                                          538      ;
                                          539      ; Note
                                          540      ; BOOT_VECTOR_TABLE setting can also be used, if
                                                    all other interrupt vectors
                                          541      ; are specified via "pragma intvect". Only if in
                                                   terrupts 0..7 are specified
                                          542      ; via "pragma intvect", these will conflict with
                                                    the vector in this module.
                                          543      ; The reason is the INTVECT section, which inclu
                                                   des the whole area from the
                                          544      ; lowest to the highest specified vector.
                                          545
                                          546
                                          547      ;===============================================
                                                   =====================
                                          548      ; 4.16  Vector table base register configuration
                                          549      ;===============================================
                                                   =====================
                                          550
                                          551      ; The BootROM is able to set the vector table ba
                                                   se register (TBR) that
                                          552      ; defines the memory area where the interrupt ve
                                                   ctors are located
                                          553
                                          554      #set      TBR_INIT_VALUE         0xFFFF   ; <<<
                                                   define TBR value (address bits [23:8])
                                          555
                                          556      ; Note that address bits [9:8] are always treate
                                                   d as '0', which means
                                          557      ; that 0xFFFF will also locate the vector table
                                                   to its default address 0xFF:FC00
                                          558
                                          559      ; ATTENTION: Linker must place INTVECT section t
                                                   o the appropriate address
                                          560
                                          561
                                          562      ;===============================================
                                                   =====================
                                          563      ; 4.17  UART scanning
                                          564      ;===============================================
                                                   =====================
                                          565
                                          566      #set      UART_SCANNING   OFF        ; <<< enabl
                                                   e UART scanning in
                                          567                                           ;     Inter
                                                   nal Vector Mode
                                          568      ;
                                          569      ; By default, the MCU scans in Internal Vector M
                                                   ode for a UART
                                          570      ; communication after reset. This enables to est
                                                   ablish a serial
                                          571      ; communication without switching to Serial Comm
                                                   unication Mode.
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  18
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          572      ; For the final application, set this switch to
                                                   OFF to achieve the
                                          573      ; fastest start-up time.
                                          574
                                          575
                                          576      ;===============================================
                                                   =====================
                                          577      ; 4.18  On-chip debug system configuration
                                          578      ;===============================================
                                                   =====================
                                          579      #set      DEBUG_SECURITY_ENABLE     OFF
                                                     ; <<< enable Debug Security
                                          580
                                          581      ; Set the debug security password length 1-14 (n
                                                   umber of 16-bit words)
                                          582      ; only evaluated if DEBUG_SECURITY_ENABLE is ON,
                                                    otherwise a length of 0 will be automatically c
                                                   hosen
                                          583      #set      DEBUG_SECURITY_PASSWORD_LENGTH     14
                                                     ; <<< set Debug Security password length
                                          584
                                          585      ; Set the debug security password
                                          586      #set      DEBUG_SECURITY_PASSWORD_1    0x0000
                                          587      #set      DEBUG_SECURITY_PASSWORD_2    0x0000
                                          588      #set      DEBUG_SECURITY_PASSWORD_3    0x0000
                                          589      #set      DEBUG_SECURITY_PASSWORD_4    0x0000
                                          590      #set      DEBUG_SECURITY_PASSWORD_5    0x0000
                                          591      #set      DEBUG_SECURITY_PASSWORD_6    0x0000
                                          592      #set      DEBUG_SECURITY_PASSWORD_7    0x0000
                                          593      #set      DEBUG_SECURITY_PASSWORD_8    0x0000
                                          594      #set      DEBUG_SECURITY_PASSWORD_9    0x0000
                                          595      #set      DEBUG_SECURITY_PASSWORD_10   0x0000
                                          596      #set      DEBUG_SECURITY_PASSWORD_11   0x0000
                                          597      #set      DEBUG_SECURITY_PASSWORD_12   0x0000
                                          598      #set      DEBUG_SECURITY_PASSWORD_13   0x0000
                                          599      #set      DEBUG_SECURITY_PASSWORD_14   0x0000
                                          600
                                          601
                                          602
                                          603
                                          604      ; Set the on-chip debug system boot mode
                                          605      #set      OCDS_BOOT_NORMAL          1      ; nor
                                                   mal boot with handshaking, mode decided by MDI i
                                                   nit sequence
                                          606      #set      OCDS_BOOT_FAST_FREERUN    2      ; fas
                                                   t boot, don't wait for end of MDI init sequence,
                                                    start in free-run mode
                                          607      #set      OCDS_BOOT_FAST_EMULATION  3      ; fas
                                                   t boot, don't wait for end of MDI init sequence,
                                                    start in emulation mode
                                          608
                                          609      #set      OCDS_BOOT_MODE            OCDS_BOOT_NO
                                                   RMAL   ; <<< select OCDS boot mode
                                          610      ; Note, it is recommended to choose the OCDS_BOO
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  19
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   T_FAST_FREERUN mode for the final application in
                                                    order to speed up the boot phase
                                          611
                                          612
                                          613      ; Set on-chip debug system pin mode
                                          614      #set      OCDS_DEBUG_PIN_MDI        1      ; deb
                                                   ug pin enabled
                                          615      #set      OCDS_DEBUG_PIN_SOFTGPIO   2      ; deb
                                                   ug pin temporarily disabled, but can be enabled
                                                   by the application
                                          616      #set      OCDS_DEBUG_PIN_GPIO       3      ; deb
                                                   ug pin permanently disabled, no debugging possib
                                                   le any more (strongest security)
                                          617
                                          618      #set      OCDS_DEBUG_PIN_MODE       OCDS_DEBUG_P
                                                   IN_MDI   ; <<< select OCDS debug pin mode
                                          619      ; Note, while debug pin is disabled it can be us
                                                   ed as a GPIO pin
                                          620
                                          621
                                          622      ;===============================================
                                                   =====================
                                          623      ; 4.19  NMI / WAKE configuration
                                          624      ;===============================================
                                                   =====================
                                          625
                                          626      ; The BootROM is able to setup and enable the NM
                                                   I pin,
                                          627      ; so that the NMI can be active during the whole
                                                    execution of the user code
                                          628      #set      NMIPIN_MODE_DISABLED                 1
                                                     ; BootROM does not enable the NMI function
                                          629      #set      NMIPIN_MODE_NMI_FUNCTION_LOW_ACT     2
                                                     ; BootROM enables the low active NMI function
                                          630      #set      NMIPIN_MODE_NMI_FUNCTION_HIGH_ACT    3
                                                     ; BootROM enables the high active NMI function
                                          631
                                          632
                                          633      #set      NMIPIN_MODE             NMI_MODE_DISAB
                                                   LED   ; <<< select mode of the NMI pin
                                          634
                                          635      ; The BootROM is able to relocate the NMI pin
                                          636      #set      NMIPIN_RELOCATION       OFF    ; <<< s
                                                   elect NMI pin relocation
                                          637
                                          638      ; Note, the relocation setting is device specifi
                                                   c, if the selected target MCU
                                          639      ; does not support NMI relocation a pre-processo
                                                   r error will be generated
                                          640
                                          641
                                          642      ;===============================================
                                                   =====================
                                          643      ; 4.20  Low voltage detection configuration
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  20
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          644      ;===============================================
                                                   =====================
                                          645
                                          646      ; The BootROM is able to lock the low voltage de
                                                   tector which means that
                                          647      ; low voltage detection and corresponding reset
                                                   is always enabled and
                                          648      ; user code cannot change the setting by acciden
                                                   t
                                          649      #set      LVD_LOCK            OFF   ; <<< select
                                                    locking of LVD state
                                          650
                                          651
                                          652      ;===============================================
                                                   =====================
                                          653      ; 4.21  Watchdog timer interval configuration
                                          654      ;===============================================
                                                   =====================
                                          655
                                          656      ; BootROM can change the default Watchdog timer
                                                   interval
                                          657
                                          658      ; Watchdog timer interval is given in clock cycl
                                                   es, where
                                          659      ; WT_2_X_CYCLES means 2 to power of X cycles of
                                                   Watchdog timer clock.
                                          660
                                          661      #set      WT_2_8_CYCLES    0
                                          662      #set      WT_2_9_CYCLES    1
                                          663      #set      WT_2_10_CYCLES   2
                                          664      #set      WT_2_11_CYCLES   3
                                          665      #set      WT_2_12_CYCLES   4
                                          666      #set      WT_2_13_CYCLES   5
                                          667      #set      WT_2_14_CYCLES   6
                                          668      #set      WT_2_15_CYCLES   7
                                          669      #set      WT_2_16_CYCLES   8
                                          670      #set      WT_2_17_CYCLES   9
                                          671      #set      WT_2_18_CYCLES   10
                                          672      #set      WT_2_19_CYCLES   11
                                          673      #set      WT_2_20_CYCLES   12
                                          674      #set      WT_2_21_CYCLES   13
                                          675      #set      WT_2_22_CYCLES   14
                                          676      #set      WT_2_23_CYCLES   15
                                          677
                                          678      #set      WT_INTERVAL     WT_2_23_CYCLES    ; <<
                                                   < select Watchdog timer interval
                                          679
                                          680
                                          681      ; <<< END OF SETTINGS >>>
                                          682
                                          683      ;===============================================
                                                   =====================
                                          684      ; 5  Section and Data Declaration
                                          685      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  21
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                          686
                                          687      ;===============================================
                                                   =====================
                                          688      ; 5.1   Several fixed addresses (fixed for MB966
                                                   xx controllers)
                                          689      ;===============================================
                                                   =====================
                                          690
          = 000003AE                      691      ROMM       .EQU      0x03AE          ; ROM mirro
                                                   r control register
          = 00000401                      692      CKSR       .EQU      0x0401          ; Clock sel
                                                   ection register
          = 00000402                      693      CKSSR      .EQU      0x0402          ; Clock sta
                                                   bilization select register
          = 00000403                      694      CKMR       .EQU      0x0403          ; Clock mon
                                                   itor register
          = 00000404                      695      CKFCR      .EQU      0x0404          ; Clock fre
                                                   quency control register
          = 00000406                      696      PLLCR      .EQU      0x0406          ; PLL contr
                                                   ol register
                                          697
                                          698
                                          699      ;===============================================
                                                   =====================
                                          700      ; 5.2   Set ROM Configuration for Boot Vector
                                          701      ;===============================================
                                                   =====================
                                          702      #set VECTOR_TABLE_BASE_ADDRESS    ((TBR_INIT_VAL
                                                   UE & 0xFFFC) << 8)
                                          703
                                          704      #if BOOT_VECTOR == BOOT_VECTOR_TABLE
BO DF0030 --------<BOOT_SELECT>--------   705                .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
BO DF0030 FFFFFFFF                        706                .DATA.L 0xFFFFFFFF
RE FFFFDC ----------<RESVECT>----------   707                .SECTION        RESVECT, CONST, LOCATE
                                                   =(VECTOR_TABLE_BASE_ADDRESS + 0x3DC)
RE FFFFDC 000000R                         708                .DATA.E _start
                                          709
                                          710      #elif BOOT_VECTOR == BOOT_VECTOR_ALTERNATIVE
                                          711   X            .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
                                          712   X            .DATA.L 0x292D3A7B        ; "Magic Wor
                                                   d"
                                          713   X            .SECTION        ALTRESVECT, CONST, LOC
                                                   ATE=H'DF0040
                                          714   X            .DATA.E _start
                                          715   X  #else
                                          716   X            .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
                                          717   X            .SKIP   4
                                          718      #endif
                                          719
                                          720      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  22
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                          721      ; 5.3   Set ROM configuration for UART Scanning
                                          722      ;===============================================
                                                   =====================
                                          723
                                          724
                                          725      #if UART_SCANNING == ON
                                          726   X            .SECTION        UART_SCAN_SELECT, CONS
                                                   T, LOCATE=H'DF0034
                                          727   X            .DATA.L 0xFFFFFFFF
                                          728      #else
UA DF0034 -----<UART_SCAN_SELECT>------   729                .SECTION        UART_SCAN_SELECT, CONS
                                                   T, LOCATE=H'DF0034
UA DF0034 7B3A2D29                        730                .DATA.L 0x292D3A7B        ; Deactivati
                                                   on "Magic Word"
                                          731      #endif
                                          732
                                          733
                                          734
                                          735      ;===============================================
                                                   =====================
                                          736      ; 5.4   Set Flash Security
                                          737      ;===============================================
                                                   =====================
                                          738
                                          739      #set FLASH_B_AVAILABLE  0;
                                                                   \
                                          740        ; (
                                                                   \
                                          741          ; (
                                                                   \
                                          742            ; (SERIES == MB96340) &&
                                                                   \
                                          743            ; (
                                                                   \
                                          744              ; (DEVICE == MB96348HxA) ||
                                                                   \
                                          745              ; (DEVICE == MB96348TxA) ||
                                                                   \
                                          746              ; (DEVICE == MB96348CxA) ||
                                                                   \
                                          747              ; (DEVICE == MB96348HxB) ||
                                                                   \
                                          748              ; (DEVICE == MB96348TxB) ||
                                                                   \
                                          749              ; (DEVICE == MB96348HxC) ||
                                                                   \
                                          750              ; (DEVICE == MB96348TxC) ||
                                                                   \
                                          751              ; (DEVICE == MB96348CxC)
                                                                   \
                                          752            ; )
                                                                   \
                                          753          ; )
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  23
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                                   \
                                          754          ; ||
                                                                   \
                                          755          ; (SERIES == MB96370)
                                                                   \
                                          756          ; ||
                                                                   \
                                          757          ; (
                                                                   \
                                          758            ; (SERIES == MB96380) &&
                                                                   \
                                          759            ; (
                                                                   \
                                          760              ; (DEVICE == MB96388HxB) ||
                                                                   \
                                          761              ; (DEVICE == MB96389RxB)
                                                                   \
                                          762            ; )
                                                                   \
                                          763          ; )
                                                                   \
                                          764        ; )
                                          765
                                          766
                                          767
FL DF0000 -----<FLASH_A_SECURITY>------   768                .SECTION FLASH_A_SECURITY, CONST, LOCA
                                                   TE=H'DF0000
                                          769      #if FLASH_A_SECURITY_ENABLE == OFF
FL DF0000 6666                            770                    .DATA.W 0x6666 ; Security DISABLED
                                                    (mandatory for mask ROM)
FL DF0012 - DF0002   [16]                 771                    .SKIP   16
                                          772      #else FLASH_A_SECURITY_ENABLE == ON
                                          773   X                .DATA.W 0x9999 ; Security ENABLED
                                          774   X                .DATA.W ((FLASH_A_UNLOCK_1  << 8)
                                                   | FLASH_A_UNLOCK_0)
                                          775   X                .DATA.W ((FLASH_A_UNLOCK_3  << 8)
                                                   | FLASH_A_UNLOCK_2)
                                          776   X                .DATA.W ((FLASH_A_UNLOCK_5  << 8)
                                                   | FLASH_A_UNLOCK_4)
                                          777   X                .DATA.W ((FLASH_A_UNLOCK_7  << 8)
                                                   | FLASH_A_UNLOCK_6)
                                          778   X                .DATA.W ((FLASH_A_UNLOCK_9  << 8)
                                                   | FLASH_A_UNLOCK_8)
                                          779   X                .DATA.W ((FLASH_A_UNLOCK_11 << 8)
                                                   | FLASH_A_UNLOCK_10)
                                          780   X                .DATA.W ((FLASH_A_UNLOCK_13 << 8)
                                                   | FLASH_A_UNLOCK_12)
                                          781   X                .DATA.W ((FLASH_A_UNLOCK_15 << 8)
                                                   | FLASH_A_UNLOCK_14)
                                          782      #endif
                                          783
                                          784
                                          785      #if FLASH_B_AVAILABLE == ON
                                          786   X            .SECTION FLASH_B_SECURITY, CONST, LOCA
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  24
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   TE=H'DE0000
                                          787   X  #  if FLASH_B_SECURITY_ENABLE == OFF
                                          788   X                .DATA.W 0x6666 ; Security DISABLED
                                                    (mandatory for mask ROM)
                                          789   X                .SKIP   16
                                          790   X  #  else FLASH_B_SECURITY_ENABLE == ON
                                          791   X                .DATA.W 0x9999 ; Security ENABLED
                                          792   X                .DATA.W ((FLASH_B_UNLOCK_1  << 8)
                                                   | FLASH_B_UNLOCK_0)
                                          793   X                .DATA.W ((FLASH_B_UNLOCK_3  << 8)
                                                   | FLASH_B_UNLOCK_2)
                                          794   X                .DATA.W ((FLASH_B_UNLOCK_5  << 8)
                                                   | FLASH_B_UNLOCK_4)
                                          795   X                .DATA.W ((FLASH_B_UNLOCK_7  << 8)
                                                   | FLASH_B_UNLOCK_6)
                                          796   X                .DATA.W ((FLASH_B_UNLOCK_9  << 8)
                                                   | FLASH_B_UNLOCK_8)
                                          797   X                .DATA.W ((FLASH_B_UNLOCK_11 << 8)
                                                   | FLASH_B_UNLOCK_10)
                                          798   X                .DATA.W ((FLASH_B_UNLOCK_13 << 8)
                                                   | FLASH_B_UNLOCK_12)
                                          799   X                .DATA.W ((FLASH_B_UNLOCK_15 << 8)
                                                   | FLASH_B_UNLOCK_14)
                                          800   X  #  endif
                                          801   X
                                          802      #endif ; FLASH_B_AVAILABLE == ON
                                          803
                                          804      ;===============================================
                                                   =====================
                                          805      ; 5.5   Set Flash write protection
                                          806      ;===============================================
                                                   =====================
                                          807
FL DF001C ------<FLASH_A_PROTECT>------   808                .SECTION FLASH_A_PROTECT, CONST, LOCAT
                                                   E=H'DF001C
                                          809      #if FLASH_A_WRITE_PROTECT == ON
FL DF001C 7B3A2D29                        810                .DATA.L 0x292D3A7B
FL DF0020 FF                              811                .DATA.B ~((PROTECT_SECTOR_SA3 << 4) |
                                                   (PROTECT_SECTOR_SA2 << 3) | (PROTECT_SECTOR_SA1
                                                   << 2) | (PROTECT_SECTOR_SA0 << 1) | PROTECT_SECT
                                                   OR_SAS)
FL DF0024 - DF0021   [3]                  812                .SKIP   3
FL DF0024 FF                              813                .DATA.B ~((PROTECT_SECTOR_SA39 << 7) |
                                                    (PROTECT_SECTOR_SA38 << 6) | (PROTECT_SECTOR_SA
                                                   37 << 5) | (PROTECT_SECTOR_SA36 << 4) | (PROTECT
                                                   _SECTOR_SA35 << 3) | (PROTECT_SECTOR_SA34 << 2)
                                                   | (PROTECT_SECTOR_SA33 << 1) | PROTECT_SECTOR_SA
                                                   32)
FL DF0026 - DF0025   [1]                  814                .SKIP   1
                                          815      #else
                                          816   X            .DATA.L 0xFFFFFFFF
                                          817   X            .SKIP   6
                                          818      #endif ; FLASH_A_WRITE_PROTECT
                                          819
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  25
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          820
                                          821      #if FLASH_B_AVAILABLE == ON
                                          822   X            .SECTION FLASH_B_PROTECT, CONST, LOCAT
                                                   E=H'DE001C
                                          823   X  #  if FLASH_B_WRITE_PROTECT == ON
                                          824   X            .DATA.L 0x292D3A7B
                                          825   X            .DATA.B ~((PROTECT_SECTOR_SB3 << 4) |
                                                   (PROTECT_SECTOR_SB2 << 3) | (PROTECT_SECTOR_SB1
                                                   << 2) | (PROTECT_SECTOR_SB0 << 1) | PROTECT_SECT
                                                   OR_SBS)
                                          826   X            .SKIP   3
                                          827   X            .DATA.B ~((PROTECT_SECTOR_SB31 << 7) |
                                                    (PROTECT_SECTOR_SB30 << 6) | (PROTECT_SECTOR_SB
                                                   29 << 5) | (PROTECT_SECTOR_SB28 << 4) | (PROTECT
                                                   _SECTOR_SB27 << 3) | (PROTECT_SECTOR_SB26 << 2)
                                                   | (PROTECT_SECTOR_SB25 << 1) | PROTECT_SECTOR_SB
                                                   24)
                                          828   X            .SKIP   1
                                          829   X  #  else
                                          830   X            .DATA.L 0xFFFFFFFF
                                          831   X            .SKIP   6
                                          832   X  #  endif ; FLASH_B_WRITE_PROTECT
                                          833   X
                                          834      #endif ; FLASH_B_AVAILABLE == ON
                                          835
                                          836      ;===============================================
                                                   =====================
                                          837      ; 5.6   Set ROM configuration for OCDS
                                          838      ;===============================================
                                                   =====================
                                          839
                                          840      #if (DEBUG_SECURITY_ENABLE == ON) && ((DEBUG_SEC
                                                   URITY_PASSWORD_LENGTH > 14) || (DEBUG_SECURITY_P
                                                   ASSWORD_LENGTH < 1))
                                          841   X  #  error DEBUG_SECURITY_PASSWORD_LENGTH out of r
                                                   ange
                                          842      #endif
                                          843
                                          844
OC DF0056 -----<OCDS_BOOT_SELECT>------   845                .SECTION        OCDS_BOOT_SELECT, CONS
                                                   T, LOCATE=H'DF0056
                                          846
                                          847      #if OCDS_BOOT_MODE == OCDS_BOOT_FAST_FREERUN
                                          848   X            .DATA.B 0x55
                                          849      #elif OCDS_BOOT_MODE == OCDS_BOOT_FAST_EMULATION
                                          850   X            .DATA.B 0xAA
                                          851      #else
OC DF0056 FF                              852                .DATA.B 0xFF
                                          853      #endif
                                          854
OC DF0058 -------<OCDS_SECURITY>-------   855                .SECTION OCDS_SECURITY, CONST, LOCATE=
                                                   H'DF0058
                                          856
                                          857      #if DEBUG_SECURITY_ENABLE == ON
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  26
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          858   X            .DATA.W DEBUG_SECURITY_PASSWORD_LENGTH
                                          859   X            .DATA.W DEBUG_SECURITY_PASSWORD_1
                                          860   X            .DATA.W DEBUG_SECURITY_PASSWORD_2
                                          861   X            .DATA.W DEBUG_SECURITY_PASSWORD_3
                                          862   X            .DATA.W DEBUG_SECURITY_PASSWORD_4
                                          863   X            .DATA.W DEBUG_SECURITY_PASSWORD_5
                                          864   X            .DATA.W DEBUG_SECURITY_PASSWORD_6
                                          865   X            .DATA.W DEBUG_SECURITY_PASSWORD_7
                                          866   X            .DATA.W DEBUG_SECURITY_PASSWORD_8
                                          867   X            .DATA.W DEBUG_SECURITY_PASSWORD_9
                                          868   X            .DATA.W DEBUG_SECURITY_PASSWORD_10
                                          869   X            .DATA.W DEBUG_SECURITY_PASSWORD_11
                                          870   X            .DATA.W DEBUG_SECURITY_PASSWORD_12
                                          871   X            .DATA.W DEBUG_SECURITY_PASSWORD_13
                                          872   X            .DATA.W DEBUG_SECURITY_PASSWORD_14
                                          873      #else
OC DF0058 0000                            874                .DATA.W 0x00
OC DF0076 - DF005A   [28]                 875                .SKIP   (14 * 2)
                                          876      #endif
                                          877
OC DF0076 ----<OCDS_PINMODE_SELECT>----   878                .SECTION        OCDS_PINMODE_SELECT, C
                                                   ONST, LOCATE=H'DF0076
                                          879
                                          880      #if OCDS_DEBUG_PIN_MODE == OCDS_DEBUG_PIN_SOFTGP
                                                   IO
                                          881   X            .DATA.B 0x82
                                          882   X            .DATA.B 0xB8
                                          883   X            .DATA.B 0xDB
                                          884   X            .DATA.B 0x6B
                                          885   X            .DATA.B 0x71
                                          886   X            .DATA.B 0xCE
                                          887   X            .DATA.B 0x39
                                          888   X            .DATA.B 0x84
                                          889   X            .DATA.B 0x53
                                          890   X            .DATA.B 0x58
                                          891   X            .DATA.B 0xE3
                                          892   X            .DATA.B 0x25
                                          893   X            .DATA.B 0x1B
                                          894   X            .DATA.B 0x63
                                          895   X            .DATA.B 0x7C
                                          896   X            .DATA.B 0x96
                                          897   X            .DATA.B 0xE4
                                          898   X            .DATA.B 0x36
                                          899      #elif OCDS_DEBUG_PIN_MODE == OCDS_DEBUG_PIN_GPIO
                                          900   X            .DATAB.B 18, 0x00
                                          901      #else
OC DF0076 [18]  FF                        902                .DATAB.B 18, 0xFF
                                          903      #endif
                                          904
                                          905
                                          906
                                          907
                                          908      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  27
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          909      ; 5.7   Set ROM configuration for NMI
                                          910      ;===============================================
                                                   =====================
                                          911
NM DF0026 ------<NMIRELOC_SELECT>------   912                .SECTION        NMIRELOC_SELECT, CONST
                                                   , LOCATE=H'DF0026
                                          913
                                          914
                                          915      #if NMI_RELOCATION == ON
                                          916   X  #  if (SERIES == MB96670) || (SERIES == MB96680)
                                          917   X  #    error NMI relocation is not possible for th
                                                   e selected device series.
                                          918   X  #  else
                                          919   X            .DATA.B 0x55
                                          920   X  #  endif
                                          921      #else
NM DF0026 FF                              922                .DATA.B 0xFF
                                          923      #endif
                                          924
NM DF0027 -----<NMIPINMODE_SELECT>-----   925                .SECTION        NMIPINMODE_SELECT, CON
                                                   ST, LOCATE=H'DF0027
                                          926      #if NMIPIN_MODE == NMIPIN_MODE_NMI_FUNCTION_LOW_
                                                   ACT
                                          927   X            .DATA.B 0x55
                                          928      #elif NMIPIN_MODE == NMIPIN_MODE_NMI_FUNCTION_HI
                                                   GH_ACT
                                          929   X            .DATA.B 0xAA
                                          930      #else ; NMI disabled
NM DF0027 FF                              931                .DATA.B 0xFF
NM DF0028 FF                              932                .DATA.B 0xFF
NM DF0029 FF                              933                .DATA.B 0xFF
                                          934      #endif
                                          935
                                          936
                                          937      ;===============================================
                                                   =====================
                                          938      ; 5.8   Set ROM configuration for Table Base Reg
                                                   ister (TBR)
                                          939      ;===============================================
                                                   =====================
                                          940
TB DF002A --------<TBR_SELECT>---------   941                .SECTION        TBR_SELECT, CONST, LOC
                                                   ATE=H'DF002A
                                          942
TB DF002A FFFF                            943                .DATA.W TBR_INIT_VALUE
                                          944
                                          945
                                          946      ;===============================================
                                                   =====================
                                          947      ; 5.9   Set ROM configuration for sub oscillator
                                          948      ;===============================================
                                                   =====================
                                          949
SU DF003A -------<SUBOSC_SELECT>-------   950                .SECTION        SUBOSC_SELECT, CONST,
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  28
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   LOCATE=H'DF003A
                                          951
                                          952      #if SUBOSC_MODE == SUBOSC_CRYSTAL
                                          953   X            .DATA.B 0x55
                                          954      #elif SUBOSC_MODE == SUBOSC_EXT_CLOCK
                                          955   X            .DATA.B 0xAA
                                          956      #else
SU DF003A FF                              957                .DATA.B 0xFF
                                          958      #endif
                                          959
                                          960
                                          961      ;===============================================
                                                   =====================
                                          962      ; 5.10  Set ROM configuration for low voltage de
                                                   tection
                                          963      ;===============================================
                                                   =====================
                                          964
LV DF003B --------<LVD_SELECT>---------   965                .SECTION        LVD_SELECT, CONST, LOC
                                                   ATE=H'DF003B
                                          966
                                          967      #if LVD_LOCK == ON
                                          968   X            .DATA.B 0x55
                                          969      #else
LV DF003B FF                              970                .DATA.B 0xFF
                                          971      #endif
                                          972
                                          973
                                          974      ;===============================================
                                                   =====================
                                          975      ; 5.11  Set ROM configuration for watchdog inter
                                                   val
                                          976      ;===============================================
                                                   =====================
                                          977
WT DF003C -----<WTINTERVAL_SELECT>-----   978                .SECTION        WTINTERVAL_SELECT, CON
                                                   ST, LOCATE=H'DF003C
                                          979
WT DF003C 0F                              980                .DATA.B WT_INTERVAL
                                          981
                                          982
                                          983      ;===============================================
                                                   =====================
                                          984      ; 5.12  Store version information
                                          985      ;===============================================
                                                   =====================
                                          986
                                          987      #if VERSION_STAMP == ON
                                          988   X            .SECTION  VERSIONS, CONST ; change nam
                                                   e, if necessary
                                          989   X            .SDATA    "Start ", VERSION, "\n\0"
                                          990      #endif
                                          991
                                          992      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  29
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                          993      ; 5.13  Declaration of __near addressed data sec
                                                   tions
                                          994      ;===============================================
                                                   =====================
                                          995
                                          996      ; sections to be cleared
DA 000000 -----------<DATA>------------   997                .SECTION  DATA,      DATA,   ALIGN=2
                                                   ; zero clear area
DA 000000 -----------<DATA2>-----------   998                .SECTION  DATA2,     DATA,   ALIGN=2
                                                   ; zero clear area
DI 000000 ----------<DIRDATA>----------   999                .SECTION  DIRDATA,   DIR,    ALIGN=2
                                                   ; zero clear direct
LI 000000 ----------<LIBDATA>----------  1000                .SECTION  LIBDATA,   DATA,   ALIGN=2
                                                   ; zero clear lib area
                                         1001
                                         1002      ; sections to be initialised with start-up value
                                                   s
IN 000000 -----------<INIT>------------  1003                .SECTION  INIT,      DATA,   ALIGN=2
                                                   ; initialised area
IN 000000 -----------<INIT2>-----------  1004                .SECTION  INIT2,     DATA,   ALIGN=2
                                                   ; initialised area
DI 000000 ----------<DIRINIT>----------  1005                .SECTION  DIRINIT,   DIR,    ALIGN=2
                                                   ; initialised dir
LI 000000 ----------<LIBINIT>----------  1006                .SECTION  LIBINIT,   DATA,   ALIGN=2
                                                   ; initialised lib area
                                         1007      #if CONSTDATA == RAMCONST
CI 000000 -----------<CINIT>-----------  1008                .SECTION  CINIT,     DATA,   ALIGN=2
                                                   ; initialised const
CI 000000 ----------<CINIT2>-----------  1009                .SECTION  CINIT2,    DATA,   ALIGN=2
                                                   ; initialised const
                                         1010      #endif
                                         1011
                                         1012      ; sections containing start-up values for initia
                                                   lised sections above
DC 000000 ----------<DCONST>-----------  1013                .SECTION  DCONST,    CONST,  ALIGN=2
                                                   ; DINIT initialisers
DI 000000 ---------<DIRCONST>----------  1014                .SECTION  DIRCONST, DIRCONST,ALIGN=2
                                                   ; DIRINIT initialisers
LI 000000 ---------<LIBDCONST>---------  1015                .SECTION  LIBDCONST, CONST,  ALIGN=2
                                                   ; LIBDCONST init val
                                         1016
                                         1017                ; following section is either copied t
                                                   o CINIT (RAMCONST) or
                                         1018                ; mapped by ROM-mirror function (ROMCO
                                                   NST)
CO 000000 -----------<CONST>-----------  1019                .SECTION  CONST,     CONST,  ALIGN=2
                                                   ; CINIT initialisers
CO 000000 ----------<CONST2>-----------  1020                .SECTION  CONST2,    CONST,  ALIGN=2
                                                   ; CINIT initialisers
                                         1021
                                         1022      ;===============================================
                                                   =====================
                                         1023      ; 5.14  Declaration of RAMCODE section and label
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  30
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   s
                                         1024      ;===============================================
                                                   =====================
                                         1025
                                         1026      #if COPY_RAMCODE == ON
                                         1027   X            .SECTION  RAMCODE,   CODE,  ALIGN=1
                                         1028   X            .IMPORT _RAM_RAMCODE
                                                   ; provided by linker
                                         1029   X            .IMPORT _ROM_RAMCODE
                                                   ; provided by linker
                                         1030      #endif
                                         1031
                                         1032
                                         1033      ;===============================================
                                                   =====================
                                         1034      ; 5.15  Declaration of sections containing other
                                                    sections description
                                         1035      ;===============================================
                                                   =====================
                                         1036
                                         1037      ; DCLEAR contains start address and size of all
                                                   sections to be cleared
                                         1038      ; DTRANS contains source and destination address
                                                    and size of all
                                         1039      ; sections to be initialised with start-up value
                                                   s
                                         1040      ; The compiler automatically adds a descriptor f
                                                   or each __far addressed
                                         1041      ; data section to DCLEAR or DTRANS. These __far
                                                   sections are separated
                                         1042      ; for each C-module.
                                         1043
                                         1044      ; In addition the start-up file adds the descrip
                                                   tors of the previously
                                         1045      ; declared __near section here. This way the sam
                                                   e code in the start-up
                                         1046      ; file can be used for initialising all sections
                                                   .
                                         1047
DC 000000 ----------<DCLEAR>-----------  1048         .SECTION  DCLEAR,    CONST,  ALIGN=2  ; zero
                                                   clear table
                                         1049         ;    Address         Bank            Size
DC 000000 0000S 0000S 0000S              1050         .DATA.H DATA,    BNKSEC DATA,    SIZEOF(DATA
                                                     )
DC 000006 0000S 0000S 0000S              1051         .DATA.H DIRDATA, BNKSEC DIRDATA, SIZEOF(DIRDA
                                                   TA)
DC 00000C 0000S 0000S 0000S              1052         .DATA.H LIBDATA, BNKSEC LIBDATA, SIZEOF(LIBDA
                                                   TA)
                                         1053
DT 000000 ----------<DTRANS>-----------  1054         .SECTION  DTRANS,    CONST,  ALIGN=2  ; copy
                                                   table
                                         1055         ;    Address         Bank               Addre
                                                   ss     Bank          Size
DT 000000 0000S 0000S 0000S 0000S 0000S  1056         .DATA.H DCONST,   BNKSEC DCONST,   INIT,   BN
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  31
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   KSEC INIT,   SIZEOF INIT
DT 00000A 0000S 0000S 0000S 0000S 0000S  1057         .DATA.H DIRCONST, BNKSEC DIRCONST, DIRINIT,BN
                                                   KSEC DIRINIT,SIZEOF DIRINIT
DT 000014 0000S 0000S 0000S 0000S 0000S  1058         .DATA.H LIBDCONST,BNKSEC LIBDCONST,LIBINIT,BN
                                                   KSEC LIBINIT,SIZEOF LIBINIT
                                         1059
                                         1060      #if CONSTDATA == RAMCONST
DT 00001E 0000S 0000S 0000S 0000S 0000S  1061         .DATA.H CONST,    BNKSEC CONST,    CINIT,  BN
                                                   KSEC CINIT,  SIZEOF CINIT
DT 000028 0000S 0000S 0000S 0000S 0000S  1062         .DATA.H CONST2,   BNKSEC CONST,    CINIT2, BN
                                                   KSEC CINIT2, SIZEOF CINIT2
                                         1063      #endif
                                         1064
                                         1065      #if COPY_RAMCODE == ON
                                         1066   X     .DATA.L _ROM_RAMCODE, _RAM_RAMCODE
                                         1067   X     .DATA.H SIZEOF RAMCODE
                                         1068      #endif
                                         1069
                                         1070      ;===============================================
                                                   =====================
                                         1071      ; 5.16  Stack area and stack top definition/decl
                                                   aration
                                         1072      ;===============================================
                                                   =====================
                                         1073      #if STACK_RESERVE == ON
SS 000000 ----------<SSTACK>-----------  1074                  .SECTION  SSTACK, STACK, ALIGN=2
                                         1075
                                         1076                  .EXPORT __systemstack, __systemstack
                                                   _top
SS 000000                                1077      __systemstack:
SS 000000 [768]B                         1078                  .RES.B    (STACK_SYS_SIZE + 1) & 0xF
                                                   FFE
SS 000300                                1079      __systemstack_top:
SS 000300                                1080      SSTACK_TOP:
                                         1081
US 000000 ----------<USTACK>-----------  1082                  .SECTION  USTACK, STACK, ALIGN=2
                                         1083
                                         1084                  .EXPORT __userstack, __userstack_top
US 000000                                1085      __userstack:
US 000000 [2]B                           1086                  .RES.B    (STACK_USR_SIZE + 1) & 0xF
                                                   FFE
US 000002                                1087      __userstack_top:
US 000002                                1088      USTACK_TOP:
                                         1089
                                         1090      #else
                                         1091   X              .SECTION  SSTACK, STACK, ALIGN=2
                                         1092   X              .SECTION  USTACK, STACK, ALIGN=2
                                         1093      #endif
                                         1094
                                         1095      ;===============================================
                                                   =====================
                                         1096      ; 5.17  Direct page register dummy label definit
                                                   ion
                                         1097      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  32
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                         1098
DI 000000 ----------<DIRDATA>----------  1099                .SECTION  DIRDATA  ; zero clear direct
DI 000000                                1100      DIRDATA_S:
                                                   ; label for DPR init
                                         1101
                                         1102      ; This label is used to get the page of the __di
                                                   rect data.
                                         1103      ; Depending on the linkage order of this startup
                                                    file the label is
                                         1104      ; placed anywhere within the __direct data page.
                                                    However, the
                                         1105      ; statement "PAGE (DIRDATA_S)" is processed. The
                                                   refore, the lower
                                         1106      ; 8 Bit of the address of DIRDATA_S are not rele
                                                   vant and this feature
                                         1107      ; becomes linkage order independent.
                                         1108      ; Note, the linker settings have to make sure th
                                                   at all __direct
                                         1109      ; data are located within the same physical page
                                                    (256 Byte block).
                                         1110
                                         1111
                                         1112
                                         1113      ;===============================================
                                                   =====================
                                         1114      ; 6  Start-Up Code
                                         1115      ;===============================================
                                                   =====================
                                         1116
                                         1117      ;===============================================
                                                   =====================
                                         1118      ; 6.1   Import external symbols
                                         1119      ;===============================================
                                                   =====================
                                         1120
                                         1121                .IMPORT   _main                    ; u
                                                   ser code entrance
                                         1122      #if CLIBINIT == ON
                                         1123   X            .IMPORT   __stream_init
                                         1124   X            .IMPORT   _exit
                                         1125   X            .EXPORT   __exit
                                         1126      #endif
                                         1127                .EXPORT   _start
                                         1128
                                         1129      ;===============================================
                                                   =====================
                                         1130      ;   ___  _____   __    ___  _____
                                         1131      ;  /       |    /  \  |   \   |
                                         1132      ;  \___    |   |    | |___/   |
                                         1133      ;      \   |   |----| |  \    |
                                         1134      ;   ___/   |   |    | |   \   |      Begin of ac
                                                   tual code section
                                         1135      ;
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  33
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1136      ;===============================================
                                                   =====================
CO 000000 --------<CODE_START>---------  1137                .SECTION  CODE_START, CODE, ALIGN=1
                                         1138
                                         1139      ;===============================================
                                                   =====================
                                         1140      ; 6.2   Program start (the reset vector should p
                                                   oint here)
                                         1141      ;===============================================
                                                   =====================
CO 000000                                1142      _start:
CO 000000 00                             1143                NOP  ; This NOP is only for debugging.
                                                    On debugger the IP
                                         1144                     ; (instruction pointer) should po
                                                   int here after reset
                                         1145
                                         1146      ;===============================================
                                                   =====================
                                         1147      ; 6.3   Initialisation of processor status
                                         1148      ;===============================================
                                                   =====================
CO 000001 2480                           1149                AND  CCR, #0x80          ; disable int
                                                   errupts
CO 000003 1A07                           1150                MOV  ILM,#7              ; set interru
                                                   pt level mask to ALL
CO 000005 0A00                           1151                MOV  RP,#REGBANK         ; set registe
                                                   r bank pointer
                                         1152
                                         1153      ;===============================================
                                                   =====================
                                         1154      ; 6.4   Set clock ratio (ignore subclock)
                                         1155      ;===============================================
                                                   =====================
                                         1156
CO 000007 D0                             1157                MOVN A, #0               ; set bank 0
                                                   in DTB for the case that
CO 000008 6F10                           1158                MOV  DTB, A              ; start-up co
                                                   de was not jumped by reset
                                         1159
CO 00000A 71DF02043C                     1160                MOV  CKSSR, #(0x38 | MC_STAB_TIME)  ;
                                                   set clock stabilization time
                                         1161
                                         1162      #set CLOCK_RC     0     ; RC clock is input to c
                                                   lock divider
                                         1163      #set CLOCK_MAIN   1     ; MAIN clock is input to
                                                    clock divider
                                         1164      #set CLOCK_PLL    2     ; PLL clock is input to
                                                   clock divider
                                         1165      #set CLOCK_SUB    3     ; SUB clock is input to
                                                   clock divider
                                         1166
                                         1167      ; select default source for CLKB and CLKP1
                                         1168      #set CLKB_CLKP1_SOURCE  CLOCK_PLL
                                         1169      ; select default source for CLKP2
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  34
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1170      #set CLKP2_SOURCE       CLOCK_PLL
                                         1171
                                         1172
                                         1173      ;                          ++-----    PLL multip
                                                   lier (CLKS1, CLKS2)
                                         1174      ;                          ||++----   VCO clock
                                                   multiplier (PLL internal)
                                         1175      ;                          ||||+---   CLKB divid
                                                   er (CPU clock)
                                         1176      ;                          |||||+--   CLKP1 divi
                                                   der (peripherals except CAN, Sound, USB)
                                         1177      ;                          ||||||+-   CLKP2 divi
                                                   der (CAN, Sound)
                                         1178      ;                          |||||||
                                         1179      #if CLOCK_SPEED == CPU_4MHZ_MAIN_CLKP2_4MHZ
                                         1180   X  #  set   CLK_PARAMS_4MHZ 0x0110111   ; CLKS1=CLK
                                                   S2= 4MHZ, CLK_VCO=64MHZ
                                         1181   X  #  set   CLK_PARAMS_8MHZ 0x010C222   ; CLKS1=CLK
                                                   S2= 8MHZ, CLK_VCO=96MHZ
                                         1182   X  #  set  CLK_PARAMS_16MHZ 0x0106444   ; CLKS1=CLK
                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1183   X  #  set CLKB_CLKP1_SOURCE CLOCK_MAIN  ; select MA
                                                   IN clock as source for CLKB, CLKP1 divider
                                         1184   X  #  set CLKP2_SOURCE      CLOCK_MAIN  ; select MA
                                                   IN clock as source for CLKP2, CLKP3 divider
                                         1185   X
                                         1186      #elif CLOCK_SPEED == CPU_4MHZ_PLL_CLKP2_4MHZ
                                         1187   X  #  set   CLK_PARAMS_4MHZ 0x0110111   ; CLKS1=CLK
                                                   S2= 4MHZ, CLK_VCO=64MHZ
                                         1188   X  #  set   CLK_PARAMS_8MHZ 0x010C222   ; CLKS1=CLK
                                                   S2= 8MHZ, CLK_VCO=96MHZ
                                         1189   X  #  set  CLK_PARAMS_16MHZ 0x0106444   ; CLKS1=CLK
                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1190   X
                                         1191      #elif CLOCK_SPEED == CPU_8MHZ_CLKP2_8MHZ
                                         1192   X  #  set   CLK_PARAMS_4MHZ 0x020C111   ; CLKS1=CLK
                                                   S2= 8MHZ, CLK_VCO=96MHZ
                                         1193   X  #  set   CLK_PARAMS_8MHZ 0x010C111   ; CLKS1=CLK
                                                   S2= 8MHZ, CLK_VCO=96MHZ
                                         1194   X  #  set  CLK_PARAMS_16MHZ 0x0106222   ; CLKS1=CLK
                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1195   X
                                         1196      #elif CLOCK_SPEED == CPU_12MHZ_CLKP2_12MHZ
                                         1197   X  #  set   CLK_PARAMS_4MHZ 0x0308111   ; CLKS1=CLK
                                                   S2=12MHZ, CLK_VCO=96MHZ
                                         1198   X  #  set   CLK_PARAMS_8MHZ 0x0304222   ; CLKS1=CLK
                                                   S2=24MHZ, CLK_VCO=96MHZ
                                         1199   X  #  set  CLK_PARAMS_16MHZ 0x0302444   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1200   X
                                         1201      #elif CLOCK_SPEED == CPU_16MHZ_CLKP2_16MHZ
                                         1202   X  #  set   CLK_PARAMS_4MHZ 0x0406111   ; CLKS1=CLK
                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1203   X  #  set   CLK_PARAMS_8MHZ 0x0206111   ; CLKS1=CLK
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  35
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1204   X  #  set  CLK_PARAMS_16MHZ 0x0106111   ; CLKS1=CLK
                                                   S2=16MHZ, CLK_VCO=96MHZ
                                         1205   X
                                         1206      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_12MHZ
                                         1207   X  #  set   CLK_PARAMS_4MHZ 0x0604112   ; CLKS1=CLK
                                                   S2=24MHZ, CLK_VCO=96MHZ
                                         1208   X  #  set   CLK_PARAMS_8MHZ 0x0304112   ; CLKS1=CLK
                                                   S2=24MHZ, CLK_VCO=96MHZ
                                         1209   X  #  set  CLK_PARAMS_16MHZ 0x0302224   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1210   X
                                         1211      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_16MHZ
                                         1212   X  #  set   CLK_PARAMS_4MHZ 0x0C02223   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1213   X  #  set   CLK_PARAMS_8MHZ 0x0602223   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1214   X  #  set  CLK_PARAMS_16MHZ 0x0302223   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1215   X
                                         1216      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_24MHZ
                                         1217   X  #  set   CLK_PARAMS_4MHZ 0x0604111   ; CLKS1=CLK
                                                   S2=24MHZ, CLK_VCO=96MHZ
                                         1218   X  #  set   CLK_PARAMS_8MHZ 0x0304111   ; CLKS1=CLK
                                                   S2=24MHZ, CLK_VCO=96MHZ
                                         1219   X  #  set  CLK_PARAMS_16MHZ 0x0302222   ; CLKS1=CLK
                                                   S2=48MHZ, CLK_VCO=96MHZ
                                         1220   X
                                         1221      #elif CLOCK_SPEED == CPU_32MHZ_CLKP2_16MHZ
                                         1222      #  set   CLK_PARAMS_4MHZ 0x0802112   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1223      #  set   CLK_PARAMS_8MHZ 0x0402112   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1224      #  set  CLK_PARAMS_16MHZ 0x0202112   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1225
                                         1226      #elif CLOCK_SPEED == CPU_32MHZ_CLKP1_16MHZ_CLKP2
                                                   _16MHZ
                                         1227   X  #  set   CLK_PARAMS_4MHZ 0x0802122   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1228   X  #  set   CLK_PARAMS_8MHZ 0x0402122   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1229   X  #  set  CLK_PARAMS_16MHZ 0x0202122   ; CLKS1=CLK
                                                   S2=32MHZ, CLK_VCO=64MHZ
                                         1230   X
                                         1231   X  #else
                                         1232   X  #  error The selected setting of "CLOCK_SPEED" i
                                                   s not supported.
                                         1233      #endif
                                         1234
                                         1235      #if CRYSTAL == FREQ_4MHZ
                                         1236      #  set CLK_PARAMS    CLK_PARAMS_4MHZ
                                         1237      #elif CRYSTAL == FREQ_8MHZ
                                         1238   X  #  set CLK_PARAMS    CLK_PARAMS_8MHZ
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  36
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1239   X  #elif CRYSTAL == FREQ_16MHZ
                                         1240   X  #  set CLK_PARAMS    CLK_PARAMS_16MHZ
                                         1241   X  #else
                                         1242   X  #  error specified crystal frequency ("CRYSTAL")
                                                    is not supported by this file.
                                         1243      #endif
                                         1244
                                         1245      #set      FREQ_1MHZ       D'1000000L
                                         1246
                                         1247      ;===============================================
                                                   =====================
                                         1248      ; macros to evaluate parameter settings
                                         1249
                                         1250      #define PLL_MULTIPLIER(params) \
                                         1251        ((params & 0xFF00000L) >> 20)
                                         1252
                                         1253      #define VCO_MULTIPLIER(params) \
                                         1254        ((params & 0x00FF000L) >> 12)
                                         1255
                                         1256      #define CLKB_DIVIDER(params) \
                                         1257        ((params & 0x0000F00L) >> 8)
                                         1258
                                         1259      #define CLKP1_DIVIDER(params) \
                                         1260        ((params & 0x00000F0L) >> 4)
                                         1261
                                         1262      #define CLKP2_DIVIDER(params) \
                                         1263        ((params & 0x000000FL) >> 0)
                                         1264
                                         1265
                                         1266
                                         1267      #define  CLKVCO(params)\
                                         1268        (CRYSTAL * PLL_MULTIPLIER(params) * VCO_MULTIP
                                                   LIER(params))
                                         1269
                                         1270      #define CLKS1_CLKS2(params) \
                                         1271        (CRYSTAL * PLL_MULTIPLIER(params))
                                         1272
                                         1273      #define CLKB(params) \
                                         1274        (CLKS1_CLKS2(params) / CLKB_DIVIDER(params))
                                         1275
                                         1276      #define CLKP1(params) \
                                         1277        (CLKS1_CLKS2(params) / CLKP1_DIVIDER(params))
                                         1278
                                         1279      #if (CLKP2_SOURCE == CLOCK_PLL)
                                         1280      #  define CLKP2(params) \
                                         1281           (CLKS1_CLKS2(params) / CLKP2_DIVIDER(params
                                                   ))
                                         1282      #elif (CLKP2_SOURCE == CLOCK_MAIN)
                                         1283   X  #  define CLKP2(params) \
                                         1284   X       (CRYSTAL / CLKP2_DIVIDER(params))
                                         1285   X  #else
                                         1286   X  #  error Clock source for CLKP2 is not supported
                                                   .
                                         1287      #endif
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  37
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1288
                                         1289
                                         1290      ;===============================================
                                                   =====================
                                         1291      ; protect all devices from common illegal settin
                                                   gs
                                         1292
                                         1293
                                         1294      #if (CLKS1_CLKS2(CLK_PARAMS) > (54 * FREQ_1MHZ))
                                         1295   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1296      #endif
                                         1297      #if (CLKB(CLK_PARAMS) > (32 * FREQ_1MHZ))
                                         1298   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1299      #endif
                                         1300      #if (CLKP1(CLK_PARAMS) > (32 * FREQ_1MHZ))
                                         1301   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1302      #endif
                                         1303      #if (CLKP2(CLK_PARAMS) > (32 * FREQ_1MHZ))
                                         1304   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1305      #endif
                                         1306
                                         1307      #if (CLKVCO(CLK_PARAMS) < (54 * FREQ_1MHZ))
                                         1308   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1309      #endif
                                         1310      #if (CLKVCO(CLK_PARAMS) > (108 * FREQ_1MHZ))
                                         1311   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1312      #endif
                                         1313      #if (VCO_MULTIPLIER(CLK_PARAMS) & 1) ; VCO multi
                                                   plier must be even!
                                         1314   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1315      #endif
                                         1316      #if (VCO_MULTIPLIER(CLK_PARAMS) > 16)
                                         1317   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1318      #endif
                                         1319
                                         1320
                                         1321
                                         1322
                                         1323      ;===============================================
                                                   =====================
                                         1324      ; define register settings
                                         1325
                                         1326      #define PLLCR_SETTING(params)
                                                                                  \
                                         1327           (
                                                                                  \
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  38
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1328            (((VCO_MULTIPLIER(params) - 2) / 2) << 5)
                                                                                  \
                                         1329            |
                                                                                  \
                                         1330            ((PLL_MULTIPLIER(params) - 1) << 0)
                                                                                  \
                                         1331           )
                                         1332
                                         1333      #define CKFCR_SETTING(params)
                                                                                  \
                                         1334        (
                                                                                  \
                                         1335          ((CLKP2_DIVIDER(params) - 1) << 12)
                                                                                  \
                                         1336          |
                                                                                  \
                                         1337          ((CLKP1_DIVIDER(params) - 1) <<  8)
                                                                                  \
                                         1338          |
                                                                                  \
                                         1339          ((CLKB_DIVIDER(params)  - 1) <<  4)
                                                                                  \
                                         1340          |
                                                                                  \
                                         1341          1
                                                                                  \
                                         1342        )
                                         1343
                                         1344      #define CKSR_SETTING(CLKS1_SOURCE, CLKS2_SOURCE)
                                                                                  \
                                         1345        (
                                                                                  \
                                         1346          0xF0
                                                                                  \
                                         1347          |
                                                                                  \
                                         1348          ((CLKS2_SOURCE & 0x3)
                                                                        << 2)     \
                                         1349          |
                                                                                  \
                                         1350          ((CLKS1_SOURCE & 0x3)
                                                                        << 0)     \
                                         1351        )
                                         1352
                                         1353      ;===============================================
                                                   =====================
                                         1354      ; PLL startup sequence
                                         1355
CO 00000F 73DF06040700                   1356                MOVW PLLCR, # PLLCR_SETTING(CLK_PARAMS
                                                   )
CO 000015 73DF04040110                   1357                MOVW CKFCR, # CKFCR_SETTING(CLK_PARAMS
                                                   )
CO 00001B 71DF0104FA                     1358                MOV  CKSR,  # CKSR_SETTING(CLKB_CLKP1_
                                                   SOURCE, CLKP2_SOURCE)
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  39
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1359
                                         1360
                                         1361      ;===============================================
                                                   =====================
                                         1362      ; 6.5   Set ROM mirror configuaration
                                         1363      ;===============================================
                                                   =====================
                                         1364
          = 000000F7                     1365      ROMM_CONFIG    .EQU     ((MIRROR_BANK << 4) | (M
                                                   IRROR_SIZE << 1) | (ROMMIRROR))
CO 000020 71DFAE03F7                     1366                 MOV  ROMM, #ROMM_CONFIG
                                         1367
                                         1368
                                         1369      ;===============================================
                                                   =====================
                                         1370      ; 6.6   Prepare stacks and set the default stack
                                                    type
                                         1371      ;===============================================
                                                   =====================
                                         1372
                                         1373      ; Use word aligned stack section. Stack symbols
                                                   are ignored.
                                         1374      #define SSTACK_L    ((SSTACK + 1) & ~1)
                                         1375      #define SSTACK_H    ((SSTACK + SIZEOF(SSTACK)) &
                                                    ~1)
                                         1376      #define SSTACK_BNK  BNKSEC SSTACK
                                         1377
                                         1378      #define USTACK_L    ((USTACK + 1) & ~1)
                                         1379      #define USTACK_H    ((USTACK + SIZEOF(USTACK)) &
                                                    ~1)
                                         1380      #define USTACK_BNK  BNKSEC USTACK
                                         1381
CO 000025 24DF                           1382                AND  CCR,#H'DF            ; clear syst
                                                   em stack flag
CO 000027 4B00000000                S    1383                MOVL A, #USTACK_H
CO 00002C 47                             1384                MOVW SP,A                 ; load offse
                                                   t of stack top to pointer
CO 00002D 4200                      S    1385                MOV  A, #USTACK_BNK       ; load bank
                                                   of stack start address to A
CO 00002F 6F13                           1386                MOV  USB, A               ; set bank
                                         1387
                                         1388      #if STACK_FILL == ON                ; preset the
                                                    stack
CO 000031 4B00000000                S    1389                MOVL A, #(USTACK_L)       ; load start
                                                    stack address to A
CO 000036 4AAA55                         1390                MOVW A, #STACK_PATTERN    ; AL -> AH,
                                                   pattern in AL
CO 000039 A80000                    S    1391                MOVW RW0, #(USTACK_H - USTACK_L) / 2 ;
                                                    get word count
                                         1392      ; Compiler WARNING W1807A for the following stri
                                                   ng isntruction can be ignored, usage is safe at
                                                   this location
CO 00003C 6EE3                           1393                FILSWI    SPB             ; write patt
                                                   ern to stack
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  40
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1394      #endif
                                         1395
CO 00003E 2520                           1396                OR   CCR,#H'20            ; set System
                                                    stack flag
CO 000040 4B00000000                S    1397                MOVL A, #SSTACK_H
CO 000045 47                             1398                MOVW SP,A                 ; load offse
                                                   t of stack top to pointer
CO 000046 4200                      S    1399                MOV  A, #SSTACK_BNK       ; load bank
                                                   of stack start address to A
CO 000048 6F12                           1400                MOV  SSB, A               ; set bank
                                         1401
                                         1402      #if STACK_FILL == ON                ; preset the
                                                    stack
CO 00004A 4B00000000                S    1403                MOVL A, #(SSTACK_L)       ; load start
                                                    stack address to A
CO 00004F 4AAA55                         1404                MOVW A, #STACK_PATTERN    ; AL -> AH,
                                                   pattern in AL
CO 000052 A80000                    S    1405                MOVW RW0, #(SSTACK_H - SSTACK_L) / 2;
                                                   get byte count
                                         1406      ; Compiler WARNING W1807A for the following stri
                                                   ng isntruction can be ignored, usage is safe at
                                                   this location
CO 000055 6EE3                           1407                FILSWI    SPB             ; write patt
                                                   ern to stack
                                         1408      #endif
                                         1409
                                         1410      #if STACKUSE == USRSTACK
                                         1411   X            AND  CCR,#H'DF            ; clear syst
                                                   em stack flag
                                         1412      #endif
                                         1413
                                         1414
                                         1415      ;   The following macro is needed because of the
                                                    AUTOMODEL option. If the
                                         1416      ;   model is not known while assembling the modu
                                                   le, one has to expect
                                         1417      ;   completion of streaminit() by RET or RETP. B
                                                   ecause RET removes 2 bytes
                                         1418      ;   from stack and RETP removes 4 bytes from sta
                                                   ck, SP is reloaded.
                                         1419
                                         1420      #macro RELOAD_SP
                                         1421
                                         1422      #  if STACKUSE == USRSTACK
                                         1423                MOVW A, #USTACK_H
                                         1424      #  else
                                         1425                MOVW A, #SSTACK_H
                                         1426      #  endif
                                         1427                MOVW SP,A
                                         1428      #endm
                                         1429
                                         1430      ;===============================================
                                                   =====================
                                         1431      ; 6.7   Copy initial values to data areas
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  41
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1432      ;===============================================
                                                   =====================
                                         1433      ;
                                         1434      ; Each C-module has its own __far INIT section.
                                                   The names are generic.
                                         1435      ; DCONST_module contains the initializers for th
                                                   e far data of the one
                                         1436      ; module. INIT_module reserves the RAM area, whi
                                                   ch has to be loaded
                                         1437      ; with the data from DCONST_module. ("module" is
                                                    the name of the *.c
                                         1438      ; file)
                                         1439      ; All separated DCONST_module/INIT_module areas
                                                   are described in
                                         1440      ; DTRANS section by start addresses and length o
                                                   f each far section.
                                         1441      ;   0000 1. source address (ROM)
                                         1442      ;   0004 1. destination address (RAM)
                                         1443      ;   0008 length of sections 1
                                         1444      ;   000A 2. source address  (ROM)
                                         1445      ;   000E 2. destination address (RAM)
                                         1446      ;   0012 length of sections 2
                                         1447      ;   0014 3. source address ...
                                         1448      ; In addition the start-up file adds the descrip
                                                   tors of the __near
                                         1449      ; sections to this table. The order of the descr
                                                   iptors in this table
                                         1450      ; depends on the linkage order.
                                         1451      ;
                                         1452      ; Note: Sections cannot exceed bank boundaries.
                                         1453      ;===============================================
                                                   =====================
CO 000057 4B00000000                S    1454                MOVL A, #DTRANS          ; get address
                                                    of table
CO 00005C 71A4                           1455                MOVL RL2, A              ; store addre
                                                   ss in RL2 (RW4/RW5)
CO 00005E 6019                           1456                BRA  LABEL2              ; branch to l
                                                   oop condition
CO 000060                                1457      LABEL1:
CO 000060 6F4C06                         1458                MOVW A, @RL2+6           ; get bank of
                                                    destination
CO 000063 6F10                           1459                MOV  DTB, A              ; save dest b
                                                   ank in DTB
CO 000065 6F4C02                         1460                MOVW A, @RL2+2           ; get source
                                                   bank
CO 000068 6F11                           1461                MOV  ADB, A              ; save source
                                                    bank in ADB
CO 00006A 6F4C08                         1462                MOVW A, @RL2+8           ; number of b
                                                   ytes to copy -> A
CO 00006D 98                             1463                MOVW RW0, A              ; number of b
                                                   ytes to copy -> RW0
CO 00006E 6F4C04                         1464                MOVW A, @RL2+4           ; move destin
                                                   ation addr in AL
CO 000071 6F4C00                         1465                MOVW A, @RL2             ; AL -> AH, s
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  42
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   rc addr -> AL
                                         1466      ; Compiler WARNING W1807A for the following stri
                                                   ng isntruction can be ignored, usage is safe at
                                                   this location
CO 000074 6E06                           1467                MOVSI DTB, ADB           ; copy data
CO 000076 DA                             1468                MOVN A, #10              ; length of o
                                                   ne table entry is 10
CO 000077 7704                           1469                ADDW RW4, A              ; set pointer
                                                    to next table entry
CO 000079                                1470      LABEL2:
CO 000079 8C                             1471                MOVW A, RW4              ; get address
                                                    of next block
CO 00007A 3B0000                    S    1472                CMPW A, #DTRANS + SIZEOF (DTRANS) ; al
                                                   l blocks processed ?
CO 00007D F1E1                           1473                BNE  LABEL1              ; if not, bra
                                                   nch
                                         1474
                                         1475      ;===============================================
                                                   =====================
                                         1476      ; 6.8   Clear uninitialized data areas to zero
                                         1477      ;===============================================
                                                   =====================
                                         1478      ;
                                         1479      ; Each C-module has its own __far DATA section.
                                                   The names are generic.
                                         1480      ; DATA_module contains the reserved area (RAM) t
                                                   o be cleared.
                                         1481      ; ("module" is the name of the *.c file)
                                         1482      ; All separated DATA_module areas are described
                                                   in DCLEAR section by
                                         1483      ; start addresses and length of all far section.
                                         1484      ;   0000 1. section address (RAM)
                                         1485      ;   0004 length of section 1
                                         1486      ;   0006 2. section address (RAM)
                                         1487      ;   000A length of section 2
                                         1488      ;   000C 3. section address (RAM)
                                         1489      ;   0010 length of section 3 ...
                                         1490      ; In addition the start-up file adds the descrip
                                                   tors of the __near
                                         1491      ; sections to this table. The order of the descr
                                                   iptors in this table
                                         1492      ; depends on the linkage order.
                                         1493      ;===============================================
                                                   =====================
CO 00007F 4200                      S    1494                MOV  A, #BNKSEC DCLEAR   ; get bank of
                                                    table
CO 000081 6F10                           1495                MOV  DTB, A              ; store bank
                                                   in DTB
CO 000083 A90000                    S    1496                MOVW RW1, #DCLEAR        ; get start o
                                                   ffset of table
CO 000086 6010                           1497                BRA  LABEL4              ; branch to l
                                                   oop condition
CO 000088                                1498      LABEL3:
CO 000088 729102                         1499                MOV  A, @RW1+2           ; get section
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  43
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                    bank
CO 00008B 6F11                           1500                MOV  ADB, A              ; save sectio
                                                   n bank in ADB
CO 00008D 7B1104                         1501                MOVW RW0, @RW1+4         ; number of b
                                                   ytes to copy -> RW0
CO 000090 7389                           1502                MOVW A, @RW1             ; move sectio
                                                   n addr in AL
CO 000092 D0                             1503                MOVN A, #0               ; AL -> AH, i
                                                   nit value -> AL
                                         1504      ; Compiler WARNING W1807A for the following stri
                                                   ng isntruction can be ignored, usage is safe at
                                                   this location
CO 000093 6EC2                           1505                FILSI     ADB            ; write 0 to
                                                   section
CO 000095 D6                             1506                MOVN A, #6               ; length of o
                                                   ne table entry is 6
CO 000096 7701                           1507                ADDW RW1, A              ; set pointer
                                                    to next table entry
CO 000098                                1508      LABEL4:
CO 000098 89                             1509                MOVW A, RW1              ; get address
                                                    of next block
CO 000099 390000                    S    1510                SUBW A, #DCLEAR          ; sub address
                                                    of first block
CO 00009C 3B0000                    S    1511                CMPW A, #SIZEOF (DCLEAR) ; all blocks
                                                   processed ?
CO 00009F F1E7                           1512                BNE  LABEL3              ; if not, bra
                                                   nch
                                         1513
                                         1514
                                         1515
                                         1516      ;===============================================
                                                   =====================
                                         1517      ; 6.9   Set Data Bank Register (DTB) and Direct
                                                   Page Register (DPR)
                                         1518      ;===============================================
                                                   =====================
CO 0000A1 4200                      S    1519                MOV  A,#BNKSEC DATA          ; User da
                                                   ta bank offset
CO 0000A3 6F10                           1520                MOV  DTB,A
                                         1521
CO 0000A5 4200                      R    1522                MOV  A,#PAGE DIRDATA_S       ; User di
                                                   rect page
CO 0000A7 6F14                           1523                MOV  DPR,A
                                         1524
                                         1525      ;===============================================
                                                   =====================
                                         1526      ; 6.10  Wait for clocks to stabilize
                                         1527      ;===============================================
                                                   =====================
                                         1528
                                         1529      #if CLOCKWAIT == ON
                                         1530      #  if CLKB_CLKP1_SOURCE == CLOCK_MAIN
                                         1531   X  no_MC_yet:
                                         1532   X            BBC  CKMR:5,no_MC_yet        ; check M
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  44
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   CM and wait for
                                         1533   X                                         ; Main Cl
                                                   ock to stabilize
                                         1534      #  elif CLKB_CLKP1_SOURCE == CLOCK_PLL
CO 0000A9                                1535      no_PLL_yet:
CO 0000A9 6C9E0304FB                     1536                BBC  CKMR:6,no_PLL_yet       ; check P
                                                   CM and wait for
                                         1537                                             ; PLL to
                                                   stabilize
                                         1538      #  else
                                         1539   X  #    error Setting of CLKB_CLKP1_SOURCE is not s
                                                   upported.
                                         1540      #  endif
                                         1541      #endif
                                         1542
                                         1543      ;===============================================
                                                   =====================
                                         1544      ; 6.11  Initialise Low-Level Library Interface
                                         1545      ;===============================================
                                                   =====================
                                         1546      ;
                                         1547      ; Call lib init function and reload stack afterw
                                                   ards, if AUTOMODEL
                                         1548      ;===============================================
                                                   =====================
                                         1549      #if CLIBINIT == ON
                                         1550   X  #  if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         1551   X            CALL __stream_init       ; initialise
                                                   library IO
                                         1552   X  #  else                            ; MEDIUM, LAR
                                                   GE, AUTOMODEL
                                         1553   X            CALLP __stream_init      ; initialise
                                                   library IO
                                         1554   X  #    if MEMMODEL == AUTOMODEL
                                         1555   X            RELOAD_SP                ; reload stac
                                                   k since stream_init was
                                         1556   X                                     ; possibly le
                                                   ft by RET (not RETP)
                                         1557   X  #    endif  ; AUTOMODEL
                                         1558   X  #  endif  ; MEDIUM, LARGE, AUTOMODEL
                                         1559      #endif  ; LIBINI
                                         1560
                                         1561      ;===============================================
                                                   =====================
                                         1562      ; 6.12  Call C-language main function
                                         1563      ;===============================================
                                                   =====================
                                         1564      #if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         1565   X            CALL _main               ; Start main
                                                   function
                                         1566      #else                              ; MEDIUM, LAR
                                                   GE, AUTOMODEL
CO 0000AE 65000000                  I    1567                CALLP _main              ; Start main
                                                   function
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  45
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1568                                         ; ignore rema
                                                   ining word on stack,
                                         1569                                         ; if main was
                                                    completed by RET
                                         1570      #endif
                                         1571      ;===============================================
                                                   =====================
                                         1572      ; 6.13  Shut down library
                                         1573      ;===============================================
                                                   =====================
                                         1574      #if CLIBINIT == ON
                                         1575   X  #  if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         1576   X            CALL _exit
                                         1577   X  #  else                            ; MEDIUM, LAR
                                                   GE, AUTOMODEL
                                         1578   X            CALLP _exit              ; ignore rema
                                                   ining word on stack,
                                         1579   X                                     ; if main was
                                                    completed by RET
                                         1580   X  #  endif
                                         1581   X  __exit:
                                         1582      #endif
                                         1583
                                         1584      ;===============================================
                                                   =====================
                                         1585      ; 6.14  Program end loop
                                         1586      ;===============================================
                                                   =====================
                                         1587
CO 0000B2 60FE                           1588      end:      BRA  end                 ; Loop
                                         1589
          ==                             1590                .END
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L14       2012-10-29 13:47:07   Page:  46
- SECTION LISTING - ( STARTUP )

   NO SECTION-NAME                       SIZE  ATTRIBUTES

    0 BOOT_SELECT  . . . . . . . . . .  000004 CONST   ABS LOCATE=DF0030
    1 RESVECT  . . . . . . . . . . . .  000003 CONST   ABS LOCATE=FFFFDC
    2 UART_SCAN_SELECT . . . . . . . .  000004 CONST   ABS LOCATE=DF0034
    3 FLASH_A_SECURITY . . . . . . . .  000012 CONST   ABS LOCATE=DF0000
    4 FLASH_A_PROTECT  . . . . . . . .  00000A CONST   ABS LOCATE=DF001C
    5 OCDS_BOOT_SELECT . . . . . . . .  000001 CONST   ABS LOCATE=DF0056
    6 OCDS_SECURITY  . . . . . . . . .  00001E CONST   ABS LOCATE=DF0058
    7 OCDS_PINMODE_SELECT  . . . . . .  000012 CONST   ABS LOCATE=DF0076
    8 NMIRELOC_SELECT  . . . . . . . .  000001 CONST   ABS LOCATE=DF0026
    9 NMIPINMODE_SELECT  . . . . . . .  000003 CONST   ABS LOCATE=DF0027
   10 TBR_SELECT . . . . . . . . . . .  000002 CONST   ABS LOCATE=DF002A
   11 SUBOSC_SELECT  . . . . . . . . .  000001 CONST   ABS LOCATE=DF003A
   12 LVD_SELECT . . . . . . . . . . .  000001 CONST   ABS LOCATE=DF003B
   13 WTINTERVAL_SELECT  . . . . . . .  000001 CONST   ABS LOCATE=DF003C
   14 DATA . . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   15 DATA2  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   16 DIRDATA  . . . . . . . . . . . .  000000 DIR     REL ALIGN=2
   17 LIBDATA  . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   18 INIT . . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   19 INIT2  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   20 DIRINIT  . . . . . . . . . . . .  000000 DIR     REL ALIGN=2
   21 LIBINIT  . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   22 CINIT  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   23 CINIT2 . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   24 DCONST . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   25 DIRCONST . . . . . . . . . . . .  000000 DIR CNS REL ALIGN=2
   26 LIBDCONST  . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   27 CONST  . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   28 CONST2 . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   29 DCLEAR . . . . . . . . . . . . .  000012 CONST   REL ALIGN=2
   30 DTRANS . . . . . . . . . . . . .  000032 CONST   REL ALIGN=2
   31 SSTACK . . . . . . . . . . . . .  000300 STACK   REL ALIGN=2
   32 USTACK . . . . . . . . . . . . .  000002 STACK   REL ALIGN=2
   33 CODE_START . . . . . . . . . . .  0000B4 CODE    REL ALIGN=1
